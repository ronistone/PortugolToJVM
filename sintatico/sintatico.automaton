State 0:
prog' -> . prog [ # ]
-- On PROGRAMA shift to state 1
-- On prog shift to state 150

State 1:
prog -> PROGRAMA . LITSTRING declaracao INI list(comando) FPROGRAMA list(decFunctions) EOF [ # ]
-- On LITSTRING shift to state 2

State 2:
prog -> PROGRAMA LITSTRING . declaracao INI list(comando) FPROGRAMA list(decFunctions) EOF [ # ]
-- On VAR shift to state 3
-- On declaracao shift to state 17
-- On INI reduce production declaracao -> 

State 3:
declaracao -> VAR . list(variaveis) [ INI ]
-- On ID shift to state 4
-- On variaveis shift to state 7
-- On separated_nonempty_list(VIRG,ID) shift to state 8
-- On list(variaveis) shift to state 16
-- On INI reduce production list(variaveis) -> 

State 4:
separated_nonempty_list(VIRG,ID) -> ID . [ DEF ]
separated_nonempty_list(VIRG,ID) -> ID . VIRG separated_nonempty_list(VIRG,ID) [ DEF ]
-- On VIRG shift to state 5
-- On DEF reduce production separated_nonempty_list(VIRG,ID) -> ID 

State 5:
separated_nonempty_list(VIRG,ID) -> ID VIRG . separated_nonempty_list(VIRG,ID) [ DEF ]
-- On ID shift to state 4
-- On separated_nonempty_list(VIRG,ID) shift to state 6

State 6:
separated_nonempty_list(VIRG,ID) -> ID VIRG separated_nonempty_list(VIRG,ID) . [ DEF ]
-- On DEF reduce production separated_nonempty_list(VIRG,ID) -> ID VIRG separated_nonempty_list(VIRG,ID) 

State 7:
list(variaveis) -> variaveis . list(variaveis) [ INI FPAR ]
-- On ID shift to state 4
-- On variaveis shift to state 7
-- On separated_nonempty_list(VIRG,ID) shift to state 8
-- On list(variaveis) shift to state 15
-- On INI reduce production list(variaveis) -> 
-- On FPAR reduce production list(variaveis) -> 

State 8:
variaveis -> separated_nonempty_list(VIRG,ID) . DEF tipo [ INI ID FPAR ]
-- On DEF shift to state 9

State 9:
variaveis -> separated_nonempty_list(VIRG,ID) DEF . tipo [ INI ID FPAR ]
-- On REAL shift to state 10
-- On INTEGER shift to state 11
-- On CARACTER shift to state 12
-- On BOOL shift to state 13
-- On tipo shift to state 14

State 10:
tipo -> REAL . [ VAR INI ID FPAR ]
-- On VAR reduce production tipo -> REAL 
-- On INI reduce production tipo -> REAL 
-- On ID reduce production tipo -> REAL 
-- On FPAR reduce production tipo -> REAL 

State 11:
tipo -> INTEGER . [ VAR INI ID FPAR ]
-- On VAR reduce production tipo -> INTEGER 
-- On INI reduce production tipo -> INTEGER 
-- On ID reduce production tipo -> INTEGER 
-- On FPAR reduce production tipo -> INTEGER 

State 12:
tipo -> CARACTER . [ VAR INI ID FPAR ]
-- On VAR reduce production tipo -> CARACTER 
-- On INI reduce production tipo -> CARACTER 
-- On ID reduce production tipo -> CARACTER 
-- On FPAR reduce production tipo -> CARACTER 

State 13:
tipo -> BOOL . [ VAR INI ID FPAR ]
-- On VAR reduce production tipo -> BOOL 
-- On INI reduce production tipo -> BOOL 
-- On ID reduce production tipo -> BOOL 
-- On FPAR reduce production tipo -> BOOL 

State 14:
variaveis -> separated_nonempty_list(VIRG,ID) DEF tipo . [ INI ID FPAR ]
-- On INI reduce production variaveis -> separated_nonempty_list(VIRG,ID) DEF tipo 
-- On ID reduce production variaveis -> separated_nonempty_list(VIRG,ID) DEF tipo 
-- On FPAR reduce production variaveis -> separated_nonempty_list(VIRG,ID) DEF tipo 

State 15:
list(variaveis) -> variaveis list(variaveis) . [ INI FPAR ]
-- On INI reduce production list(variaveis) -> variaveis list(variaveis) 
-- On FPAR reduce production list(variaveis) -> variaveis list(variaveis) 

State 16:
declaracao -> VAR list(variaveis) . [ INI ]
-- On INI reduce production declaracao -> VAR list(variaveis) 

State 17:
prog -> PROGRAMA LITSTRING declaracao . INI list(comando) FPROGRAMA list(decFunctions) EOF [ # ]
-- On INI shift to state 18

State 18:
prog -> PROGRAMA LITSTRING declaracao INI . list(comando) FPROGRAMA list(decFunctions) EOF [ # ]
-- On WHILE shift to state 19
-- On SWITCH shift to state 67
-- On SAIDA_LINHA shift to state 72
-- On SAIDA shift to state 76
-- On RETURN shift to state 80
-- On IF shift to state 82
-- On ID shift to state 24
-- On FOR shift to state 85
-- On ENTRADA shift to state 92
-- On variavel shift to state 96
-- On list(comando) shift to state 130
-- On comando_switch shift to state 101
-- On comando_se shift to state 102
-- On comando_saida_l shift to state 103
-- On comando_saida shift to state 104
-- On comando_return shift to state 105
-- On comando_for shift to state 106
-- On comando_entrada shift to state 107
-- On comando_enquanto shift to state 108
-- On comando_chamada shift to state 109
-- On comando_atribuicao shift to state 110
-- On comando shift to state 144
-- On chamada shift to state 113
-- On FPROGRAMA reduce production list(comando) -> 

State 19:
comando_enquanto -> WHILE . expressao DO nonempty_list(comando) FWHILE [ WHILE SWITCH SAIDA_LINHA SAIDA RETURN IF ID FWHILE FSWITCH FPROGRAMA FOR FIF FFUNCTION FFOR ENTRADA ELSE CASE_DEFAULT CASE ]
-- On MENOS shift to state 20
-- On LITSTRING shift to state 21
-- On LITINT shift to state 22
-- On LITCHAR shift to state 23
-- On ID shift to state 24
-- On APAR shift to state 26
-- On variavel shift to state 27
-- On expressao shift to state 65
-- On chamada shift to state 33

State 20:
expressao -> MENOS . expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
-- On MENOS shift to state 20
-- On LITSTRING shift to state 21
-- On LITINT shift to state 22
-- On LITCHAR shift to state 23
-- On ID shift to state 24
-- On APAR shift to state 26
-- On variavel shift to state 27
-- On expressao shift to state 64
-- On chamada shift to state 33

State 21:
expressao -> LITSTRING . [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
-- On WHILE reduce production expressao -> LITSTRING 
-- On VIRG reduce production expressao -> LITSTRING 
-- On SWITCH reduce production expressao -> LITSTRING 
-- On SAIDA_LINHA reduce production expressao -> LITSTRING 
-- On SAIDA reduce production expressao -> LITSTRING 
-- On RETURN reduce production expressao -> LITSTRING 
-- On RESTO reduce production expressao -> LITSTRING 
-- On POTEN reduce production expressao -> LITSTRING 
-- On OR reduce production expressao -> LITSTRING 
-- On MULTI reduce production expressao -> LITSTRING 
-- On MENOS reduce production expressao -> LITSTRING 
-- On MAIS reduce production expressao -> LITSTRING 
-- On LTE reduce production expressao -> LITSTRING 
-- On LT reduce production expressao -> LITSTRING 
-- On IF reduce production expressao -> LITSTRING 
-- On ID reduce production expressao -> LITSTRING 
-- On GTE reduce production expressao -> LITSTRING 
-- On GT reduce production expressao -> LITSTRING 
-- On FWHILE reduce production expressao -> LITSTRING 
-- On FSWITCH reduce production expressao -> LITSTRING 
-- On FPROGRAMA reduce production expressao -> LITSTRING 
-- On FPAR reduce production expressao -> LITSTRING 
-- On FOR reduce production expressao -> LITSTRING 
-- On FIF reduce production expressao -> LITSTRING 
-- On FFUNCTION reduce production expressao -> LITSTRING 
-- On FFOR reduce production expressao -> LITSTRING 
-- On EQUALS reduce production expressao -> LITSTRING 
-- On ENTRADA reduce production expressao -> LITSTRING 
-- On ENTAO reduce production expressao -> LITSTRING 
-- On END reduce production expressao -> LITSTRING 
-- On ELSE reduce production expressao -> LITSTRING 
-- On DO reduce production expressao -> LITSTRING 
-- On DIV reduce production expressao -> LITSTRING 
-- On DIFER reduce production expressao -> LITSTRING 
-- On CASE_DEFAULT reduce production expressao -> LITSTRING 
-- On CASE reduce production expressao -> LITSTRING 
-- On AND reduce production expressao -> LITSTRING 

State 22:
expressao -> LITINT . [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
-- On WHILE reduce production expressao -> LITINT 
-- On VIRG reduce production expressao -> LITINT 
-- On SWITCH reduce production expressao -> LITINT 
-- On SAIDA_LINHA reduce production expressao -> LITINT 
-- On SAIDA reduce production expressao -> LITINT 
-- On RETURN reduce production expressao -> LITINT 
-- On RESTO reduce production expressao -> LITINT 
-- On POTEN reduce production expressao -> LITINT 
-- On OR reduce production expressao -> LITINT 
-- On MULTI reduce production expressao -> LITINT 
-- On MENOS reduce production expressao -> LITINT 
-- On MAIS reduce production expressao -> LITINT 
-- On LTE reduce production expressao -> LITINT 
-- On LT reduce production expressao -> LITINT 
-- On IF reduce production expressao -> LITINT 
-- On ID reduce production expressao -> LITINT 
-- On GTE reduce production expressao -> LITINT 
-- On GT reduce production expressao -> LITINT 
-- On FWHILE reduce production expressao -> LITINT 
-- On FSWITCH reduce production expressao -> LITINT 
-- On FPROGRAMA reduce production expressao -> LITINT 
-- On FPAR reduce production expressao -> LITINT 
-- On FOR reduce production expressao -> LITINT 
-- On FIF reduce production expressao -> LITINT 
-- On FFUNCTION reduce production expressao -> LITINT 
-- On FFOR reduce production expressao -> LITINT 
-- On EQUALS reduce production expressao -> LITINT 
-- On ENTRADA reduce production expressao -> LITINT 
-- On ENTAO reduce production expressao -> LITINT 
-- On END reduce production expressao -> LITINT 
-- On ELSE reduce production expressao -> LITINT 
-- On DO reduce production expressao -> LITINT 
-- On DIV reduce production expressao -> LITINT 
-- On DIFER reduce production expressao -> LITINT 
-- On CASE_DEFAULT reduce production expressao -> LITINT 
-- On CASE reduce production expressao -> LITINT 
-- On AND reduce production expressao -> LITINT 

State 23:
expressao -> LITCHAR . [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
-- On WHILE reduce production expressao -> LITCHAR 
-- On VIRG reduce production expressao -> LITCHAR 
-- On SWITCH reduce production expressao -> LITCHAR 
-- On SAIDA_LINHA reduce production expressao -> LITCHAR 
-- On SAIDA reduce production expressao -> LITCHAR 
-- On RETURN reduce production expressao -> LITCHAR 
-- On RESTO reduce production expressao -> LITCHAR 
-- On POTEN reduce production expressao -> LITCHAR 
-- On OR reduce production expressao -> LITCHAR 
-- On MULTI reduce production expressao -> LITCHAR 
-- On MENOS reduce production expressao -> LITCHAR 
-- On MAIS reduce production expressao -> LITCHAR 
-- On LTE reduce production expressao -> LITCHAR 
-- On LT reduce production expressao -> LITCHAR 
-- On IF reduce production expressao -> LITCHAR 
-- On ID reduce production expressao -> LITCHAR 
-- On GTE reduce production expressao -> LITCHAR 
-- On GT reduce production expressao -> LITCHAR 
-- On FWHILE reduce production expressao -> LITCHAR 
-- On FSWITCH reduce production expressao -> LITCHAR 
-- On FPROGRAMA reduce production expressao -> LITCHAR 
-- On FPAR reduce production expressao -> LITCHAR 
-- On FOR reduce production expressao -> LITCHAR 
-- On FIF reduce production expressao -> LITCHAR 
-- On FFUNCTION reduce production expressao -> LITCHAR 
-- On FFOR reduce production expressao -> LITCHAR 
-- On EQUALS reduce production expressao -> LITCHAR 
-- On ENTRADA reduce production expressao -> LITCHAR 
-- On ENTAO reduce production expressao -> LITCHAR 
-- On END reduce production expressao -> LITCHAR 
-- On ELSE reduce production expressao -> LITCHAR 
-- On DO reduce production expressao -> LITCHAR 
-- On DIV reduce production expressao -> LITCHAR 
-- On DIFER reduce production expressao -> LITCHAR 
-- On CASE_DEFAULT reduce production expressao -> LITCHAR 
-- On CASE reduce production expressao -> LITCHAR 
-- On AND reduce production expressao -> LITCHAR 

State 24:
chamada -> ID . APAR separated_nonempty_list(VIRG,expressao) FPAR [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
variavel -> ID . [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE ATRIB AND ]
-- On APAR shift to state 25
-- On WHILE reduce production variavel -> ID 
-- On VIRG reduce production variavel -> ID 
-- On SWITCH reduce production variavel -> ID 
-- On SAIDA_LINHA reduce production variavel -> ID 
-- On SAIDA reduce production variavel -> ID 
-- On RETURN reduce production variavel -> ID 
-- On RESTO reduce production variavel -> ID 
-- On POTEN reduce production variavel -> ID 
-- On OR reduce production variavel -> ID 
-- On MULTI reduce production variavel -> ID 
-- On MENOS reduce production variavel -> ID 
-- On MAIS reduce production variavel -> ID 
-- On LTE reduce production variavel -> ID 
-- On LT reduce production variavel -> ID 
-- On IF reduce production variavel -> ID 
-- On ID reduce production variavel -> ID 
-- On GTE reduce production variavel -> ID 
-- On GT reduce production variavel -> ID 
-- On FWHILE reduce production variavel -> ID 
-- On FSWITCH reduce production variavel -> ID 
-- On FPROGRAMA reduce production variavel -> ID 
-- On FPAR reduce production variavel -> ID 
-- On FOR reduce production variavel -> ID 
-- On FIF reduce production variavel -> ID 
-- On FFUNCTION reduce production variavel -> ID 
-- On FFOR reduce production variavel -> ID 
-- On EQUALS reduce production variavel -> ID 
-- On ENTRADA reduce production variavel -> ID 
-- On ENTAO reduce production variavel -> ID 
-- On END reduce production variavel -> ID 
-- On ELSE reduce production variavel -> ID 
-- On DO reduce production variavel -> ID 
-- On DIV reduce production variavel -> ID 
-- On DIFER reduce production variavel -> ID 
-- On CASE_DEFAULT reduce production variavel -> ID 
-- On CASE reduce production variavel -> ID 
-- On ATRIB reduce production variavel -> ID 
-- On AND reduce production variavel -> ID 

State 25:
chamada -> ID APAR . separated_nonempty_list(VIRG,expressao) FPAR [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
-- On MENOS shift to state 20
-- On LITSTRING shift to state 21
-- On LITINT shift to state 22
-- On LITCHAR shift to state 23
-- On ID shift to state 24
-- On APAR shift to state 26
-- On variavel shift to state 27
-- On separated_nonempty_list(VIRG,expressao) shift to state 59
-- On expressao shift to state 61
-- On chamada shift to state 33

State 26:
expressao -> APAR . expressao FPAR [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
-- On MENOS shift to state 20
-- On LITSTRING shift to state 21
-- On LITINT shift to state 22
-- On LITCHAR shift to state 23
-- On ID shift to state 24
-- On APAR shift to state 26
-- On variavel shift to state 27
-- On expressao shift to state 28
-- On chamada shift to state 33

State 27:
expressao -> variavel . [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
-- On WHILE reduce production expressao -> variavel 
-- On VIRG reduce production expressao -> variavel 
-- On SWITCH reduce production expressao -> variavel 
-- On SAIDA_LINHA reduce production expressao -> variavel 
-- On SAIDA reduce production expressao -> variavel 
-- On RETURN reduce production expressao -> variavel 
-- On RESTO reduce production expressao -> variavel 
-- On POTEN reduce production expressao -> variavel 
-- On OR reduce production expressao -> variavel 
-- On MULTI reduce production expressao -> variavel 
-- On MENOS reduce production expressao -> variavel 
-- On MAIS reduce production expressao -> variavel 
-- On LTE reduce production expressao -> variavel 
-- On LT reduce production expressao -> variavel 
-- On IF reduce production expressao -> variavel 
-- On ID reduce production expressao -> variavel 
-- On GTE reduce production expressao -> variavel 
-- On GT reduce production expressao -> variavel 
-- On FWHILE reduce production expressao -> variavel 
-- On FSWITCH reduce production expressao -> variavel 
-- On FPROGRAMA reduce production expressao -> variavel 
-- On FPAR reduce production expressao -> variavel 
-- On FOR reduce production expressao -> variavel 
-- On FIF reduce production expressao -> variavel 
-- On FFUNCTION reduce production expressao -> variavel 
-- On FFOR reduce production expressao -> variavel 
-- On EQUALS reduce production expressao -> variavel 
-- On ENTRADA reduce production expressao -> variavel 
-- On ENTAO reduce production expressao -> variavel 
-- On END reduce production expressao -> variavel 
-- On ELSE reduce production expressao -> variavel 
-- On DO reduce production expressao -> variavel 
-- On DIV reduce production expressao -> variavel 
-- On DIFER reduce production expressao -> variavel 
-- On CASE_DEFAULT reduce production expressao -> variavel 
-- On CASE reduce production expressao -> variavel 
-- On AND reduce production expressao -> variavel 

State 28:
expressao -> expressao . MAIS expressao [ RESTO POTEN OR MULTI MENOS MAIS LTE LT GTE GT FPAR EQUALS DIV DIFER AND ]
expressao -> expressao . MENOS expressao [ RESTO POTEN OR MULTI MENOS MAIS LTE LT GTE GT FPAR EQUALS DIV DIFER AND ]
expressao -> expressao . MULTI expressao [ RESTO POTEN OR MULTI MENOS MAIS LTE LT GTE GT FPAR EQUALS DIV DIFER AND ]
expressao -> expressao . DIV expressao [ RESTO POTEN OR MULTI MENOS MAIS LTE LT GTE GT FPAR EQUALS DIV DIFER AND ]
expressao -> expressao . RESTO expressao [ RESTO POTEN OR MULTI MENOS MAIS LTE LT GTE GT FPAR EQUALS DIV DIFER AND ]
expressao -> expressao . POTEN expressao [ RESTO POTEN OR MULTI MENOS MAIS LTE LT GTE GT FPAR EQUALS DIV DIFER AND ]
expressao -> expressao . LT expressao [ RESTO POTEN OR MULTI MENOS MAIS LTE LT GTE GT FPAR EQUALS DIV DIFER AND ]
expressao -> expressao . GT expressao [ RESTO POTEN OR MULTI MENOS MAIS LTE LT GTE GT FPAR EQUALS DIV DIFER AND ]
expressao -> expressao . LTE expressao [ RESTO POTEN OR MULTI MENOS MAIS LTE LT GTE GT FPAR EQUALS DIV DIFER AND ]
expressao -> expressao . GTE expressao [ RESTO POTEN OR MULTI MENOS MAIS LTE LT GTE GT FPAR EQUALS DIV DIFER AND ]
expressao -> expressao . EQUALS expressao [ RESTO POTEN OR MULTI MENOS MAIS LTE LT GTE GT FPAR EQUALS DIV DIFER AND ]
expressao -> expressao . DIFER expressao [ RESTO POTEN OR MULTI MENOS MAIS LTE LT GTE GT FPAR EQUALS DIV DIFER AND ]
expressao -> expressao . AND expressao [ RESTO POTEN OR MULTI MENOS MAIS LTE LT GTE GT FPAR EQUALS DIV DIFER AND ]
expressao -> expressao . OR expressao [ RESTO POTEN OR MULTI MENOS MAIS LTE LT GTE GT FPAR EQUALS DIV DIFER AND ]
expressao -> APAR expressao . FPAR [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
-- On RESTO shift to state 29
-- On POTEN shift to state 36
-- On OR shift to state 42
-- On MULTI shift to state 31
-- On MENOS shift to state 38
-- On MAIS shift to state 40
-- On LTE shift to state 44
-- On LT shift to state 46
-- On GTE shift to state 48
-- On GT shift to state 50
-- On FPAR shift to state 56
-- On EQUALS shift to state 52
-- On DIV shift to state 34
-- On DIFER shift to state 54
-- On AND shift to state 57

State 29:
expressao -> expressao RESTO . expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
-- On MENOS shift to state 20
-- On LITSTRING shift to state 21
-- On LITINT shift to state 22
-- On LITCHAR shift to state 23
-- On ID shift to state 24
-- On APAR shift to state 26
-- On variavel shift to state 27
-- On expressao shift to state 30
-- On chamada shift to state 33

State 30:
expressao -> expressao . MAIS expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . MENOS expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . MULTI expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . DIV expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . RESTO expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao RESTO expressao . [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . POTEN expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . LT expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . GT expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . LTE expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . GTE expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . EQUALS expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . DIFER expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . AND expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . OR expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
-- On MULTI shift to state 31
-- On DIV shift to state 34
-- On WHILE reduce production expressao -> expressao RESTO expressao 
-- On VIRG reduce production expressao -> expressao RESTO expressao 
-- On SWITCH reduce production expressao -> expressao RESTO expressao 
-- On SAIDA_LINHA reduce production expressao -> expressao RESTO expressao 
-- On SAIDA reduce production expressao -> expressao RESTO expressao 
-- On RETURN reduce production expressao -> expressao RESTO expressao 
-- On RESTO reduce production expressao -> expressao RESTO expressao 
-- On POTEN reduce production expressao -> expressao RESTO expressao 
-- On OR reduce production expressao -> expressao RESTO expressao 
-- On MENOS reduce production expressao -> expressao RESTO expressao 
-- On MAIS reduce production expressao -> expressao RESTO expressao 
-- On LTE reduce production expressao -> expressao RESTO expressao 
-- On LT reduce production expressao -> expressao RESTO expressao 
-- On IF reduce production expressao -> expressao RESTO expressao 
-- On ID reduce production expressao -> expressao RESTO expressao 
-- On GTE reduce production expressao -> expressao RESTO expressao 
-- On GT reduce production expressao -> expressao RESTO expressao 
-- On FWHILE reduce production expressao -> expressao RESTO expressao 
-- On FSWITCH reduce production expressao -> expressao RESTO expressao 
-- On FPROGRAMA reduce production expressao -> expressao RESTO expressao 
-- On FPAR reduce production expressao -> expressao RESTO expressao 
-- On FOR reduce production expressao -> expressao RESTO expressao 
-- On FIF reduce production expressao -> expressao RESTO expressao 
-- On FFUNCTION reduce production expressao -> expressao RESTO expressao 
-- On FFOR reduce production expressao -> expressao RESTO expressao 
-- On EQUALS reduce production expressao -> expressao RESTO expressao 
-- On ENTRADA reduce production expressao -> expressao RESTO expressao 
-- On ENTAO reduce production expressao -> expressao RESTO expressao 
-- On END reduce production expressao -> expressao RESTO expressao 
-- On ELSE reduce production expressao -> expressao RESTO expressao 
-- On DO reduce production expressao -> expressao RESTO expressao 
-- On DIFER reduce production expressao -> expressao RESTO expressao 
-- On CASE_DEFAULT reduce production expressao -> expressao RESTO expressao 
-- On CASE reduce production expressao -> expressao RESTO expressao 
-- On AND reduce production expressao -> expressao RESTO expressao 

State 31:
expressao -> expressao MULTI . expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
-- On MENOS shift to state 20
-- On LITSTRING shift to state 21
-- On LITINT shift to state 22
-- On LITCHAR shift to state 23
-- On ID shift to state 24
-- On APAR shift to state 26
-- On variavel shift to state 27
-- On expressao shift to state 32
-- On chamada shift to state 33

State 32:
expressao -> expressao . MAIS expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . MENOS expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . MULTI expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao MULTI expressao . [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . DIV expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . RESTO expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . POTEN expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . LT expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . GT expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . LTE expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . GTE expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . EQUALS expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . DIFER expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . AND expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . OR expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
-- On WHILE reduce production expressao -> expressao MULTI expressao 
-- On VIRG reduce production expressao -> expressao MULTI expressao 
-- On SWITCH reduce production expressao -> expressao MULTI expressao 
-- On SAIDA_LINHA reduce production expressao -> expressao MULTI expressao 
-- On SAIDA reduce production expressao -> expressao MULTI expressao 
-- On RETURN reduce production expressao -> expressao MULTI expressao 
-- On RESTO reduce production expressao -> expressao MULTI expressao 
-- On POTEN reduce production expressao -> expressao MULTI expressao 
-- On OR reduce production expressao -> expressao MULTI expressao 
-- On MULTI reduce production expressao -> expressao MULTI expressao 
-- On MENOS reduce production expressao -> expressao MULTI expressao 
-- On MAIS reduce production expressao -> expressao MULTI expressao 
-- On LTE reduce production expressao -> expressao MULTI expressao 
-- On LT reduce production expressao -> expressao MULTI expressao 
-- On IF reduce production expressao -> expressao MULTI expressao 
-- On ID reduce production expressao -> expressao MULTI expressao 
-- On GTE reduce production expressao -> expressao MULTI expressao 
-- On GT reduce production expressao -> expressao MULTI expressao 
-- On FWHILE reduce production expressao -> expressao MULTI expressao 
-- On FSWITCH reduce production expressao -> expressao MULTI expressao 
-- On FPROGRAMA reduce production expressao -> expressao MULTI expressao 
-- On FPAR reduce production expressao -> expressao MULTI expressao 
-- On FOR reduce production expressao -> expressao MULTI expressao 
-- On FIF reduce production expressao -> expressao MULTI expressao 
-- On FFUNCTION reduce production expressao -> expressao MULTI expressao 
-- On FFOR reduce production expressao -> expressao MULTI expressao 
-- On EQUALS reduce production expressao -> expressao MULTI expressao 
-- On ENTRADA reduce production expressao -> expressao MULTI expressao 
-- On ENTAO reduce production expressao -> expressao MULTI expressao 
-- On END reduce production expressao -> expressao MULTI expressao 
-- On ELSE reduce production expressao -> expressao MULTI expressao 
-- On DO reduce production expressao -> expressao MULTI expressao 
-- On DIV reduce production expressao -> expressao MULTI expressao 
-- On DIFER reduce production expressao -> expressao MULTI expressao 
-- On CASE_DEFAULT reduce production expressao -> expressao MULTI expressao 
-- On CASE reduce production expressao -> expressao MULTI expressao 
-- On AND reduce production expressao -> expressao MULTI expressao 

State 33:
expressao -> chamada . [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
-- On WHILE reduce production expressao -> chamada 
-- On VIRG reduce production expressao -> chamada 
-- On SWITCH reduce production expressao -> chamada 
-- On SAIDA_LINHA reduce production expressao -> chamada 
-- On SAIDA reduce production expressao -> chamada 
-- On RETURN reduce production expressao -> chamada 
-- On RESTO reduce production expressao -> chamada 
-- On POTEN reduce production expressao -> chamada 
-- On OR reduce production expressao -> chamada 
-- On MULTI reduce production expressao -> chamada 
-- On MENOS reduce production expressao -> chamada 
-- On MAIS reduce production expressao -> chamada 
-- On LTE reduce production expressao -> chamada 
-- On LT reduce production expressao -> chamada 
-- On IF reduce production expressao -> chamada 
-- On ID reduce production expressao -> chamada 
-- On GTE reduce production expressao -> chamada 
-- On GT reduce production expressao -> chamada 
-- On FWHILE reduce production expressao -> chamada 
-- On FSWITCH reduce production expressao -> chamada 
-- On FPROGRAMA reduce production expressao -> chamada 
-- On FPAR reduce production expressao -> chamada 
-- On FOR reduce production expressao -> chamada 
-- On FIF reduce production expressao -> chamada 
-- On FFUNCTION reduce production expressao -> chamada 
-- On FFOR reduce production expressao -> chamada 
-- On EQUALS reduce production expressao -> chamada 
-- On ENTRADA reduce production expressao -> chamada 
-- On ENTAO reduce production expressao -> chamada 
-- On END reduce production expressao -> chamada 
-- On ELSE reduce production expressao -> chamada 
-- On DO reduce production expressao -> chamada 
-- On DIV reduce production expressao -> chamada 
-- On DIFER reduce production expressao -> chamada 
-- On CASE_DEFAULT reduce production expressao -> chamada 
-- On CASE reduce production expressao -> chamada 
-- On AND reduce production expressao -> chamada 

State 34:
expressao -> expressao DIV . expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
-- On MENOS shift to state 20
-- On LITSTRING shift to state 21
-- On LITINT shift to state 22
-- On LITCHAR shift to state 23
-- On ID shift to state 24
-- On APAR shift to state 26
-- On variavel shift to state 27
-- On expressao shift to state 35
-- On chamada shift to state 33

State 35:
expressao -> expressao . MAIS expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . MENOS expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . MULTI expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . DIV expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao DIV expressao . [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . RESTO expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . POTEN expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . LT expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . GT expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . LTE expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . GTE expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . EQUALS expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . DIFER expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . AND expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . OR expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
-- On WHILE reduce production expressao -> expressao DIV expressao 
-- On VIRG reduce production expressao -> expressao DIV expressao 
-- On SWITCH reduce production expressao -> expressao DIV expressao 
-- On SAIDA_LINHA reduce production expressao -> expressao DIV expressao 
-- On SAIDA reduce production expressao -> expressao DIV expressao 
-- On RETURN reduce production expressao -> expressao DIV expressao 
-- On RESTO reduce production expressao -> expressao DIV expressao 
-- On POTEN reduce production expressao -> expressao DIV expressao 
-- On OR reduce production expressao -> expressao DIV expressao 
-- On MULTI reduce production expressao -> expressao DIV expressao 
-- On MENOS reduce production expressao -> expressao DIV expressao 
-- On MAIS reduce production expressao -> expressao DIV expressao 
-- On LTE reduce production expressao -> expressao DIV expressao 
-- On LT reduce production expressao -> expressao DIV expressao 
-- On IF reduce production expressao -> expressao DIV expressao 
-- On ID reduce production expressao -> expressao DIV expressao 
-- On GTE reduce production expressao -> expressao DIV expressao 
-- On GT reduce production expressao -> expressao DIV expressao 
-- On FWHILE reduce production expressao -> expressao DIV expressao 
-- On FSWITCH reduce production expressao -> expressao DIV expressao 
-- On FPROGRAMA reduce production expressao -> expressao DIV expressao 
-- On FPAR reduce production expressao -> expressao DIV expressao 
-- On FOR reduce production expressao -> expressao DIV expressao 
-- On FIF reduce production expressao -> expressao DIV expressao 
-- On FFUNCTION reduce production expressao -> expressao DIV expressao 
-- On FFOR reduce production expressao -> expressao DIV expressao 
-- On EQUALS reduce production expressao -> expressao DIV expressao 
-- On ENTRADA reduce production expressao -> expressao DIV expressao 
-- On ENTAO reduce production expressao -> expressao DIV expressao 
-- On END reduce production expressao -> expressao DIV expressao 
-- On ELSE reduce production expressao -> expressao DIV expressao 
-- On DO reduce production expressao -> expressao DIV expressao 
-- On DIV reduce production expressao -> expressao DIV expressao 
-- On DIFER reduce production expressao -> expressao DIV expressao 
-- On CASE_DEFAULT reduce production expressao -> expressao DIV expressao 
-- On CASE reduce production expressao -> expressao DIV expressao 
-- On AND reduce production expressao -> expressao DIV expressao 

State 36:
expressao -> expressao POTEN . expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
-- On MENOS shift to state 20
-- On LITSTRING shift to state 21
-- On LITINT shift to state 22
-- On LITCHAR shift to state 23
-- On ID shift to state 24
-- On APAR shift to state 26
-- On variavel shift to state 27
-- On expressao shift to state 37
-- On chamada shift to state 33

State 37:
expressao -> expressao . MAIS expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . MENOS expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . MULTI expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . DIV expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . RESTO expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . POTEN expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao POTEN expressao . [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . LT expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . GT expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . LTE expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . GTE expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . EQUALS expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . DIFER expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . AND expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . OR expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
-- On RESTO shift to state 29
-- On POTEN shift to state 36
-- On MULTI shift to state 31
-- On MENOS shift to state 38
-- On MAIS shift to state 40
-- On DIV shift to state 34
-- On WHILE reduce production expressao -> expressao POTEN expressao 
-- On VIRG reduce production expressao -> expressao POTEN expressao 
-- On SWITCH reduce production expressao -> expressao POTEN expressao 
-- On SAIDA_LINHA reduce production expressao -> expressao POTEN expressao 
-- On SAIDA reduce production expressao -> expressao POTEN expressao 
-- On RETURN reduce production expressao -> expressao POTEN expressao 
-- On OR reduce production expressao -> expressao POTEN expressao 
-- On LTE reduce production expressao -> expressao POTEN expressao 
-- On LT reduce production expressao -> expressao POTEN expressao 
-- On IF reduce production expressao -> expressao POTEN expressao 
-- On ID reduce production expressao -> expressao POTEN expressao 
-- On GTE reduce production expressao -> expressao POTEN expressao 
-- On GT reduce production expressao -> expressao POTEN expressao 
-- On FWHILE reduce production expressao -> expressao POTEN expressao 
-- On FSWITCH reduce production expressao -> expressao POTEN expressao 
-- On FPROGRAMA reduce production expressao -> expressao POTEN expressao 
-- On FPAR reduce production expressao -> expressao POTEN expressao 
-- On FOR reduce production expressao -> expressao POTEN expressao 
-- On FIF reduce production expressao -> expressao POTEN expressao 
-- On FFUNCTION reduce production expressao -> expressao POTEN expressao 
-- On FFOR reduce production expressao -> expressao POTEN expressao 
-- On EQUALS reduce production expressao -> expressao POTEN expressao 
-- On ENTRADA reduce production expressao -> expressao POTEN expressao 
-- On ENTAO reduce production expressao -> expressao POTEN expressao 
-- On END reduce production expressao -> expressao POTEN expressao 
-- On ELSE reduce production expressao -> expressao POTEN expressao 
-- On DO reduce production expressao -> expressao POTEN expressao 
-- On DIFER reduce production expressao -> expressao POTEN expressao 
-- On CASE_DEFAULT reduce production expressao -> expressao POTEN expressao 
-- On CASE reduce production expressao -> expressao POTEN expressao 
-- On AND reduce production expressao -> expressao POTEN expressao 

State 38:
expressao -> expressao MENOS . expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
-- On MENOS shift to state 20
-- On LITSTRING shift to state 21
-- On LITINT shift to state 22
-- On LITCHAR shift to state 23
-- On ID shift to state 24
-- On APAR shift to state 26
-- On variavel shift to state 27
-- On expressao shift to state 39
-- On chamada shift to state 33

State 39:
expressao -> expressao . MAIS expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . MENOS expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao MENOS expressao . [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . MULTI expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . DIV expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . RESTO expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . POTEN expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . LT expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . GT expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . LTE expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . GTE expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . EQUALS expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . DIFER expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . AND expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . OR expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
-- On MULTI shift to state 31
-- On DIV shift to state 34
-- On WHILE reduce production expressao -> expressao MENOS expressao 
-- On VIRG reduce production expressao -> expressao MENOS expressao 
-- On SWITCH reduce production expressao -> expressao MENOS expressao 
-- On SAIDA_LINHA reduce production expressao -> expressao MENOS expressao 
-- On SAIDA reduce production expressao -> expressao MENOS expressao 
-- On RETURN reduce production expressao -> expressao MENOS expressao 
-- On RESTO reduce production expressao -> expressao MENOS expressao 
-- On POTEN reduce production expressao -> expressao MENOS expressao 
-- On OR reduce production expressao -> expressao MENOS expressao 
-- On MENOS reduce production expressao -> expressao MENOS expressao 
-- On MAIS reduce production expressao -> expressao MENOS expressao 
-- On LTE reduce production expressao -> expressao MENOS expressao 
-- On LT reduce production expressao -> expressao MENOS expressao 
-- On IF reduce production expressao -> expressao MENOS expressao 
-- On ID reduce production expressao -> expressao MENOS expressao 
-- On GTE reduce production expressao -> expressao MENOS expressao 
-- On GT reduce production expressao -> expressao MENOS expressao 
-- On FWHILE reduce production expressao -> expressao MENOS expressao 
-- On FSWITCH reduce production expressao -> expressao MENOS expressao 
-- On FPROGRAMA reduce production expressao -> expressao MENOS expressao 
-- On FPAR reduce production expressao -> expressao MENOS expressao 
-- On FOR reduce production expressao -> expressao MENOS expressao 
-- On FIF reduce production expressao -> expressao MENOS expressao 
-- On FFUNCTION reduce production expressao -> expressao MENOS expressao 
-- On FFOR reduce production expressao -> expressao MENOS expressao 
-- On EQUALS reduce production expressao -> expressao MENOS expressao 
-- On ENTRADA reduce production expressao -> expressao MENOS expressao 
-- On ENTAO reduce production expressao -> expressao MENOS expressao 
-- On END reduce production expressao -> expressao MENOS expressao 
-- On ELSE reduce production expressao -> expressao MENOS expressao 
-- On DO reduce production expressao -> expressao MENOS expressao 
-- On DIFER reduce production expressao -> expressao MENOS expressao 
-- On CASE_DEFAULT reduce production expressao -> expressao MENOS expressao 
-- On CASE reduce production expressao -> expressao MENOS expressao 
-- On AND reduce production expressao -> expressao MENOS expressao 

State 40:
expressao -> expressao MAIS . expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
-- On MENOS shift to state 20
-- On LITSTRING shift to state 21
-- On LITINT shift to state 22
-- On LITCHAR shift to state 23
-- On ID shift to state 24
-- On APAR shift to state 26
-- On variavel shift to state 27
-- On expressao shift to state 41
-- On chamada shift to state 33

State 41:
expressao -> expressao . MAIS expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao MAIS expressao . [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . MENOS expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . MULTI expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . DIV expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . RESTO expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . POTEN expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . LT expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . GT expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . LTE expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . GTE expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . EQUALS expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . DIFER expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . AND expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . OR expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
-- On MULTI shift to state 31
-- On DIV shift to state 34
-- On WHILE reduce production expressao -> expressao MAIS expressao 
-- On VIRG reduce production expressao -> expressao MAIS expressao 
-- On SWITCH reduce production expressao -> expressao MAIS expressao 
-- On SAIDA_LINHA reduce production expressao -> expressao MAIS expressao 
-- On SAIDA reduce production expressao -> expressao MAIS expressao 
-- On RETURN reduce production expressao -> expressao MAIS expressao 
-- On RESTO reduce production expressao -> expressao MAIS expressao 
-- On POTEN reduce production expressao -> expressao MAIS expressao 
-- On OR reduce production expressao -> expressao MAIS expressao 
-- On MENOS reduce production expressao -> expressao MAIS expressao 
-- On MAIS reduce production expressao -> expressao MAIS expressao 
-- On LTE reduce production expressao -> expressao MAIS expressao 
-- On LT reduce production expressao -> expressao MAIS expressao 
-- On IF reduce production expressao -> expressao MAIS expressao 
-- On ID reduce production expressao -> expressao MAIS expressao 
-- On GTE reduce production expressao -> expressao MAIS expressao 
-- On GT reduce production expressao -> expressao MAIS expressao 
-- On FWHILE reduce production expressao -> expressao MAIS expressao 
-- On FSWITCH reduce production expressao -> expressao MAIS expressao 
-- On FPROGRAMA reduce production expressao -> expressao MAIS expressao 
-- On FPAR reduce production expressao -> expressao MAIS expressao 
-- On FOR reduce production expressao -> expressao MAIS expressao 
-- On FIF reduce production expressao -> expressao MAIS expressao 
-- On FFUNCTION reduce production expressao -> expressao MAIS expressao 
-- On FFOR reduce production expressao -> expressao MAIS expressao 
-- On EQUALS reduce production expressao -> expressao MAIS expressao 
-- On ENTRADA reduce production expressao -> expressao MAIS expressao 
-- On ENTAO reduce production expressao -> expressao MAIS expressao 
-- On END reduce production expressao -> expressao MAIS expressao 
-- On ELSE reduce production expressao -> expressao MAIS expressao 
-- On DO reduce production expressao -> expressao MAIS expressao 
-- On DIFER reduce production expressao -> expressao MAIS expressao 
-- On CASE_DEFAULT reduce production expressao -> expressao MAIS expressao 
-- On CASE reduce production expressao -> expressao MAIS expressao 
-- On AND reduce production expressao -> expressao MAIS expressao 

State 42:
expressao -> expressao OR . expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
-- On MENOS shift to state 20
-- On LITSTRING shift to state 21
-- On LITINT shift to state 22
-- On LITCHAR shift to state 23
-- On ID shift to state 24
-- On APAR shift to state 26
-- On variavel shift to state 27
-- On expressao shift to state 43
-- On chamada shift to state 33

State 43:
expressao -> expressao . MAIS expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . MENOS expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . MULTI expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . DIV expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . RESTO expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . POTEN expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . LT expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . GT expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . LTE expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . GTE expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . EQUALS expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . DIFER expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . AND expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . OR expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao OR expressao . [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
-- On RESTO shift to state 29
-- On POTEN shift to state 36
-- On MULTI shift to state 31
-- On MENOS shift to state 38
-- On MAIS shift to state 40
-- On LTE shift to state 44
-- On LT shift to state 46
-- On GTE shift to state 48
-- On GT shift to state 50
-- On EQUALS shift to state 52
-- On DIV shift to state 34
-- On DIFER shift to state 54
-- On WHILE reduce production expressao -> expressao OR expressao 
-- On VIRG reduce production expressao -> expressao OR expressao 
-- On SWITCH reduce production expressao -> expressao OR expressao 
-- On SAIDA_LINHA reduce production expressao -> expressao OR expressao 
-- On SAIDA reduce production expressao -> expressao OR expressao 
-- On RETURN reduce production expressao -> expressao OR expressao 
-- On OR reduce production expressao -> expressao OR expressao 
-- On IF reduce production expressao -> expressao OR expressao 
-- On ID reduce production expressao -> expressao OR expressao 
-- On FWHILE reduce production expressao -> expressao OR expressao 
-- On FSWITCH reduce production expressao -> expressao OR expressao 
-- On FPROGRAMA reduce production expressao -> expressao OR expressao 
-- On FPAR reduce production expressao -> expressao OR expressao 
-- On FOR reduce production expressao -> expressao OR expressao 
-- On FIF reduce production expressao -> expressao OR expressao 
-- On FFUNCTION reduce production expressao -> expressao OR expressao 
-- On FFOR reduce production expressao -> expressao OR expressao 
-- On ENTRADA reduce production expressao -> expressao OR expressao 
-- On ENTAO reduce production expressao -> expressao OR expressao 
-- On END reduce production expressao -> expressao OR expressao 
-- On ELSE reduce production expressao -> expressao OR expressao 
-- On DO reduce production expressao -> expressao OR expressao 
-- On CASE_DEFAULT reduce production expressao -> expressao OR expressao 
-- On CASE reduce production expressao -> expressao OR expressao 
-- On AND reduce production expressao -> expressao OR expressao 

State 44:
expressao -> expressao LTE . expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
-- On MENOS shift to state 20
-- On LITSTRING shift to state 21
-- On LITINT shift to state 22
-- On LITCHAR shift to state 23
-- On ID shift to state 24
-- On APAR shift to state 26
-- On variavel shift to state 27
-- On expressao shift to state 45
-- On chamada shift to state 33

State 45:
expressao -> expressao . MAIS expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . MENOS expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . MULTI expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . DIV expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . RESTO expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . POTEN expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . LT expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . GT expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . LTE expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao LTE expressao . [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . GTE expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . EQUALS expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . DIFER expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . AND expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . OR expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
-- On RESTO shift to state 29
-- On POTEN shift to state 36
-- On MULTI shift to state 31
-- On MENOS shift to state 38
-- On MAIS shift to state 40
-- On DIV shift to state 34
-- On WHILE reduce production expressao -> expressao LTE expressao 
-- On VIRG reduce production expressao -> expressao LTE expressao 
-- On SWITCH reduce production expressao -> expressao LTE expressao 
-- On SAIDA_LINHA reduce production expressao -> expressao LTE expressao 
-- On SAIDA reduce production expressao -> expressao LTE expressao 
-- On RETURN reduce production expressao -> expressao LTE expressao 
-- On OR reduce production expressao -> expressao LTE expressao 
-- On LTE reduce production expressao -> expressao LTE expressao 
-- On LT reduce production expressao -> expressao LTE expressao 
-- On IF reduce production expressao -> expressao LTE expressao 
-- On ID reduce production expressao -> expressao LTE expressao 
-- On GTE reduce production expressao -> expressao LTE expressao 
-- On GT reduce production expressao -> expressao LTE expressao 
-- On FWHILE reduce production expressao -> expressao LTE expressao 
-- On FSWITCH reduce production expressao -> expressao LTE expressao 
-- On FPROGRAMA reduce production expressao -> expressao LTE expressao 
-- On FPAR reduce production expressao -> expressao LTE expressao 
-- On FOR reduce production expressao -> expressao LTE expressao 
-- On FIF reduce production expressao -> expressao LTE expressao 
-- On FFUNCTION reduce production expressao -> expressao LTE expressao 
-- On FFOR reduce production expressao -> expressao LTE expressao 
-- On EQUALS reduce production expressao -> expressao LTE expressao 
-- On ENTRADA reduce production expressao -> expressao LTE expressao 
-- On ENTAO reduce production expressao -> expressao LTE expressao 
-- On END reduce production expressao -> expressao LTE expressao 
-- On ELSE reduce production expressao -> expressao LTE expressao 
-- On DO reduce production expressao -> expressao LTE expressao 
-- On DIFER reduce production expressao -> expressao LTE expressao 
-- On CASE_DEFAULT reduce production expressao -> expressao LTE expressao 
-- On CASE reduce production expressao -> expressao LTE expressao 
-- On AND reduce production expressao -> expressao LTE expressao 

State 46:
expressao -> expressao LT . expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
-- On MENOS shift to state 20
-- On LITSTRING shift to state 21
-- On LITINT shift to state 22
-- On LITCHAR shift to state 23
-- On ID shift to state 24
-- On APAR shift to state 26
-- On variavel shift to state 27
-- On expressao shift to state 47
-- On chamada shift to state 33

State 47:
expressao -> expressao . MAIS expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . MENOS expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . MULTI expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . DIV expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . RESTO expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . POTEN expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . LT expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao LT expressao . [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . GT expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . LTE expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . GTE expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . EQUALS expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . DIFER expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . AND expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . OR expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
-- On RESTO shift to state 29
-- On POTEN shift to state 36
-- On MULTI shift to state 31
-- On MENOS shift to state 38
-- On MAIS shift to state 40
-- On DIV shift to state 34
-- On WHILE reduce production expressao -> expressao LT expressao 
-- On VIRG reduce production expressao -> expressao LT expressao 
-- On SWITCH reduce production expressao -> expressao LT expressao 
-- On SAIDA_LINHA reduce production expressao -> expressao LT expressao 
-- On SAIDA reduce production expressao -> expressao LT expressao 
-- On RETURN reduce production expressao -> expressao LT expressao 
-- On OR reduce production expressao -> expressao LT expressao 
-- On LTE reduce production expressao -> expressao LT expressao 
-- On LT reduce production expressao -> expressao LT expressao 
-- On IF reduce production expressao -> expressao LT expressao 
-- On ID reduce production expressao -> expressao LT expressao 
-- On GTE reduce production expressao -> expressao LT expressao 
-- On GT reduce production expressao -> expressao LT expressao 
-- On FWHILE reduce production expressao -> expressao LT expressao 
-- On FSWITCH reduce production expressao -> expressao LT expressao 
-- On FPROGRAMA reduce production expressao -> expressao LT expressao 
-- On FPAR reduce production expressao -> expressao LT expressao 
-- On FOR reduce production expressao -> expressao LT expressao 
-- On FIF reduce production expressao -> expressao LT expressao 
-- On FFUNCTION reduce production expressao -> expressao LT expressao 
-- On FFOR reduce production expressao -> expressao LT expressao 
-- On EQUALS reduce production expressao -> expressao LT expressao 
-- On ENTRADA reduce production expressao -> expressao LT expressao 
-- On ENTAO reduce production expressao -> expressao LT expressao 
-- On END reduce production expressao -> expressao LT expressao 
-- On ELSE reduce production expressao -> expressao LT expressao 
-- On DO reduce production expressao -> expressao LT expressao 
-- On DIFER reduce production expressao -> expressao LT expressao 
-- On CASE_DEFAULT reduce production expressao -> expressao LT expressao 
-- On CASE reduce production expressao -> expressao LT expressao 
-- On AND reduce production expressao -> expressao LT expressao 

State 48:
expressao -> expressao GTE . expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
-- On MENOS shift to state 20
-- On LITSTRING shift to state 21
-- On LITINT shift to state 22
-- On LITCHAR shift to state 23
-- On ID shift to state 24
-- On APAR shift to state 26
-- On variavel shift to state 27
-- On expressao shift to state 49
-- On chamada shift to state 33

State 49:
expressao -> expressao . MAIS expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . MENOS expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . MULTI expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . DIV expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . RESTO expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . POTEN expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . LT expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . GT expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . LTE expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . GTE expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao GTE expressao . [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . EQUALS expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . DIFER expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . AND expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . OR expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
-- On RESTO shift to state 29
-- On POTEN shift to state 36
-- On MULTI shift to state 31
-- On MENOS shift to state 38
-- On MAIS shift to state 40
-- On DIV shift to state 34
-- On WHILE reduce production expressao -> expressao GTE expressao 
-- On VIRG reduce production expressao -> expressao GTE expressao 
-- On SWITCH reduce production expressao -> expressao GTE expressao 
-- On SAIDA_LINHA reduce production expressao -> expressao GTE expressao 
-- On SAIDA reduce production expressao -> expressao GTE expressao 
-- On RETURN reduce production expressao -> expressao GTE expressao 
-- On OR reduce production expressao -> expressao GTE expressao 
-- On LTE reduce production expressao -> expressao GTE expressao 
-- On LT reduce production expressao -> expressao GTE expressao 
-- On IF reduce production expressao -> expressao GTE expressao 
-- On ID reduce production expressao -> expressao GTE expressao 
-- On GTE reduce production expressao -> expressao GTE expressao 
-- On GT reduce production expressao -> expressao GTE expressao 
-- On FWHILE reduce production expressao -> expressao GTE expressao 
-- On FSWITCH reduce production expressao -> expressao GTE expressao 
-- On FPROGRAMA reduce production expressao -> expressao GTE expressao 
-- On FPAR reduce production expressao -> expressao GTE expressao 
-- On FOR reduce production expressao -> expressao GTE expressao 
-- On FIF reduce production expressao -> expressao GTE expressao 
-- On FFUNCTION reduce production expressao -> expressao GTE expressao 
-- On FFOR reduce production expressao -> expressao GTE expressao 
-- On EQUALS reduce production expressao -> expressao GTE expressao 
-- On ENTRADA reduce production expressao -> expressao GTE expressao 
-- On ENTAO reduce production expressao -> expressao GTE expressao 
-- On END reduce production expressao -> expressao GTE expressao 
-- On ELSE reduce production expressao -> expressao GTE expressao 
-- On DO reduce production expressao -> expressao GTE expressao 
-- On DIFER reduce production expressao -> expressao GTE expressao 
-- On CASE_DEFAULT reduce production expressao -> expressao GTE expressao 
-- On CASE reduce production expressao -> expressao GTE expressao 
-- On AND reduce production expressao -> expressao GTE expressao 

State 50:
expressao -> expressao GT . expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
-- On MENOS shift to state 20
-- On LITSTRING shift to state 21
-- On LITINT shift to state 22
-- On LITCHAR shift to state 23
-- On ID shift to state 24
-- On APAR shift to state 26
-- On variavel shift to state 27
-- On expressao shift to state 51
-- On chamada shift to state 33

State 51:
expressao -> expressao . MAIS expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . MENOS expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . MULTI expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . DIV expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . RESTO expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . POTEN expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . LT expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . GT expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao GT expressao . [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . LTE expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . GTE expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . EQUALS expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . DIFER expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . AND expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . OR expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
-- On RESTO shift to state 29
-- On POTEN shift to state 36
-- On MULTI shift to state 31
-- On MENOS shift to state 38
-- On MAIS shift to state 40
-- On DIV shift to state 34
-- On WHILE reduce production expressao -> expressao GT expressao 
-- On VIRG reduce production expressao -> expressao GT expressao 
-- On SWITCH reduce production expressao -> expressao GT expressao 
-- On SAIDA_LINHA reduce production expressao -> expressao GT expressao 
-- On SAIDA reduce production expressao -> expressao GT expressao 
-- On RETURN reduce production expressao -> expressao GT expressao 
-- On OR reduce production expressao -> expressao GT expressao 
-- On LTE reduce production expressao -> expressao GT expressao 
-- On LT reduce production expressao -> expressao GT expressao 
-- On IF reduce production expressao -> expressao GT expressao 
-- On ID reduce production expressao -> expressao GT expressao 
-- On GTE reduce production expressao -> expressao GT expressao 
-- On GT reduce production expressao -> expressao GT expressao 
-- On FWHILE reduce production expressao -> expressao GT expressao 
-- On FSWITCH reduce production expressao -> expressao GT expressao 
-- On FPROGRAMA reduce production expressao -> expressao GT expressao 
-- On FPAR reduce production expressao -> expressao GT expressao 
-- On FOR reduce production expressao -> expressao GT expressao 
-- On FIF reduce production expressao -> expressao GT expressao 
-- On FFUNCTION reduce production expressao -> expressao GT expressao 
-- On FFOR reduce production expressao -> expressao GT expressao 
-- On EQUALS reduce production expressao -> expressao GT expressao 
-- On ENTRADA reduce production expressao -> expressao GT expressao 
-- On ENTAO reduce production expressao -> expressao GT expressao 
-- On END reduce production expressao -> expressao GT expressao 
-- On ELSE reduce production expressao -> expressao GT expressao 
-- On DO reduce production expressao -> expressao GT expressao 
-- On DIFER reduce production expressao -> expressao GT expressao 
-- On CASE_DEFAULT reduce production expressao -> expressao GT expressao 
-- On CASE reduce production expressao -> expressao GT expressao 
-- On AND reduce production expressao -> expressao GT expressao 

State 52:
expressao -> expressao EQUALS . expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
-- On MENOS shift to state 20
-- On LITSTRING shift to state 21
-- On LITINT shift to state 22
-- On LITCHAR shift to state 23
-- On ID shift to state 24
-- On APAR shift to state 26
-- On variavel shift to state 27
-- On expressao shift to state 53
-- On chamada shift to state 33

State 53:
expressao -> expressao . MAIS expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . MENOS expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . MULTI expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . DIV expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . RESTO expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . POTEN expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . LT expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . GT expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . LTE expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . GTE expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . EQUALS expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao EQUALS expressao . [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . DIFER expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . AND expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . OR expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
-- On RESTO shift to state 29
-- On POTEN shift to state 36
-- On MULTI shift to state 31
-- On MENOS shift to state 38
-- On MAIS shift to state 40
-- On LTE shift to state 44
-- On LT shift to state 46
-- On GTE shift to state 48
-- On GT shift to state 50
-- On DIV shift to state 34
-- On WHILE reduce production expressao -> expressao EQUALS expressao 
-- On VIRG reduce production expressao -> expressao EQUALS expressao 
-- On SWITCH reduce production expressao -> expressao EQUALS expressao 
-- On SAIDA_LINHA reduce production expressao -> expressao EQUALS expressao 
-- On SAIDA reduce production expressao -> expressao EQUALS expressao 
-- On RETURN reduce production expressao -> expressao EQUALS expressao 
-- On OR reduce production expressao -> expressao EQUALS expressao 
-- On IF reduce production expressao -> expressao EQUALS expressao 
-- On ID reduce production expressao -> expressao EQUALS expressao 
-- On FWHILE reduce production expressao -> expressao EQUALS expressao 
-- On FSWITCH reduce production expressao -> expressao EQUALS expressao 
-- On FPROGRAMA reduce production expressao -> expressao EQUALS expressao 
-- On FPAR reduce production expressao -> expressao EQUALS expressao 
-- On FOR reduce production expressao -> expressao EQUALS expressao 
-- On FIF reduce production expressao -> expressao EQUALS expressao 
-- On FFUNCTION reduce production expressao -> expressao EQUALS expressao 
-- On FFOR reduce production expressao -> expressao EQUALS expressao 
-- On EQUALS reduce production expressao -> expressao EQUALS expressao 
-- On ENTRADA reduce production expressao -> expressao EQUALS expressao 
-- On ENTAO reduce production expressao -> expressao EQUALS expressao 
-- On END reduce production expressao -> expressao EQUALS expressao 
-- On ELSE reduce production expressao -> expressao EQUALS expressao 
-- On DO reduce production expressao -> expressao EQUALS expressao 
-- On DIFER reduce production expressao -> expressao EQUALS expressao 
-- On CASE_DEFAULT reduce production expressao -> expressao EQUALS expressao 
-- On CASE reduce production expressao -> expressao EQUALS expressao 
-- On AND reduce production expressao -> expressao EQUALS expressao 

State 54:
expressao -> expressao DIFER . expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
-- On MENOS shift to state 20
-- On LITSTRING shift to state 21
-- On LITINT shift to state 22
-- On LITCHAR shift to state 23
-- On ID shift to state 24
-- On APAR shift to state 26
-- On variavel shift to state 27
-- On expressao shift to state 55
-- On chamada shift to state 33

State 55:
expressao -> expressao . MAIS expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . MENOS expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . MULTI expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . DIV expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . RESTO expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . POTEN expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . LT expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . GT expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . LTE expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . GTE expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . EQUALS expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . DIFER expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao DIFER expressao . [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . AND expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . OR expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
-- On RESTO shift to state 29
-- On POTEN shift to state 36
-- On MULTI shift to state 31
-- On MENOS shift to state 38
-- On MAIS shift to state 40
-- On LTE shift to state 44
-- On LT shift to state 46
-- On GTE shift to state 48
-- On GT shift to state 50
-- On DIV shift to state 34
-- On WHILE reduce production expressao -> expressao DIFER expressao 
-- On VIRG reduce production expressao -> expressao DIFER expressao 
-- On SWITCH reduce production expressao -> expressao DIFER expressao 
-- On SAIDA_LINHA reduce production expressao -> expressao DIFER expressao 
-- On SAIDA reduce production expressao -> expressao DIFER expressao 
-- On RETURN reduce production expressao -> expressao DIFER expressao 
-- On OR reduce production expressao -> expressao DIFER expressao 
-- On IF reduce production expressao -> expressao DIFER expressao 
-- On ID reduce production expressao -> expressao DIFER expressao 
-- On FWHILE reduce production expressao -> expressao DIFER expressao 
-- On FSWITCH reduce production expressao -> expressao DIFER expressao 
-- On FPROGRAMA reduce production expressao -> expressao DIFER expressao 
-- On FPAR reduce production expressao -> expressao DIFER expressao 
-- On FOR reduce production expressao -> expressao DIFER expressao 
-- On FIF reduce production expressao -> expressao DIFER expressao 
-- On FFUNCTION reduce production expressao -> expressao DIFER expressao 
-- On FFOR reduce production expressao -> expressao DIFER expressao 
-- On EQUALS reduce production expressao -> expressao DIFER expressao 
-- On ENTRADA reduce production expressao -> expressao DIFER expressao 
-- On ENTAO reduce production expressao -> expressao DIFER expressao 
-- On END reduce production expressao -> expressao DIFER expressao 
-- On ELSE reduce production expressao -> expressao DIFER expressao 
-- On DO reduce production expressao -> expressao DIFER expressao 
-- On DIFER reduce production expressao -> expressao DIFER expressao 
-- On CASE_DEFAULT reduce production expressao -> expressao DIFER expressao 
-- On CASE reduce production expressao -> expressao DIFER expressao 
-- On AND reduce production expressao -> expressao DIFER expressao 

State 56:
expressao -> APAR expressao FPAR . [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
-- On WHILE reduce production expressao -> APAR expressao FPAR 
-- On VIRG reduce production expressao -> APAR expressao FPAR 
-- On SWITCH reduce production expressao -> APAR expressao FPAR 
-- On SAIDA_LINHA reduce production expressao -> APAR expressao FPAR 
-- On SAIDA reduce production expressao -> APAR expressao FPAR 
-- On RETURN reduce production expressao -> APAR expressao FPAR 
-- On RESTO reduce production expressao -> APAR expressao FPAR 
-- On POTEN reduce production expressao -> APAR expressao FPAR 
-- On OR reduce production expressao -> APAR expressao FPAR 
-- On MULTI reduce production expressao -> APAR expressao FPAR 
-- On MENOS reduce production expressao -> APAR expressao FPAR 
-- On MAIS reduce production expressao -> APAR expressao FPAR 
-- On LTE reduce production expressao -> APAR expressao FPAR 
-- On LT reduce production expressao -> APAR expressao FPAR 
-- On IF reduce production expressao -> APAR expressao FPAR 
-- On ID reduce production expressao -> APAR expressao FPAR 
-- On GTE reduce production expressao -> APAR expressao FPAR 
-- On GT reduce production expressao -> APAR expressao FPAR 
-- On FWHILE reduce production expressao -> APAR expressao FPAR 
-- On FSWITCH reduce production expressao -> APAR expressao FPAR 
-- On FPROGRAMA reduce production expressao -> APAR expressao FPAR 
-- On FPAR reduce production expressao -> APAR expressao FPAR 
-- On FOR reduce production expressao -> APAR expressao FPAR 
-- On FIF reduce production expressao -> APAR expressao FPAR 
-- On FFUNCTION reduce production expressao -> APAR expressao FPAR 
-- On FFOR reduce production expressao -> APAR expressao FPAR 
-- On EQUALS reduce production expressao -> APAR expressao FPAR 
-- On ENTRADA reduce production expressao -> APAR expressao FPAR 
-- On ENTAO reduce production expressao -> APAR expressao FPAR 
-- On END reduce production expressao -> APAR expressao FPAR 
-- On ELSE reduce production expressao -> APAR expressao FPAR 
-- On DO reduce production expressao -> APAR expressao FPAR 
-- On DIV reduce production expressao -> APAR expressao FPAR 
-- On DIFER reduce production expressao -> APAR expressao FPAR 
-- On CASE_DEFAULT reduce production expressao -> APAR expressao FPAR 
-- On CASE reduce production expressao -> APAR expressao FPAR 
-- On AND reduce production expressao -> APAR expressao FPAR 

State 57:
expressao -> expressao AND . expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
-- On MENOS shift to state 20
-- On LITSTRING shift to state 21
-- On LITINT shift to state 22
-- On LITCHAR shift to state 23
-- On ID shift to state 24
-- On APAR shift to state 26
-- On variavel shift to state 27
-- On expressao shift to state 58
-- On chamada shift to state 33

State 58:
expressao -> expressao . MAIS expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . MENOS expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . MULTI expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . DIV expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . RESTO expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . POTEN expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . LT expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . GT expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . LTE expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . GTE expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . EQUALS expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . DIFER expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . AND expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao AND expressao . [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . OR expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
-- On RESTO shift to state 29
-- On POTEN shift to state 36
-- On MULTI shift to state 31
-- On MENOS shift to state 38
-- On MAIS shift to state 40
-- On LTE shift to state 44
-- On LT shift to state 46
-- On GTE shift to state 48
-- On GT shift to state 50
-- On EQUALS shift to state 52
-- On DIV shift to state 34
-- On DIFER shift to state 54
-- On WHILE reduce production expressao -> expressao AND expressao 
-- On VIRG reduce production expressao -> expressao AND expressao 
-- On SWITCH reduce production expressao -> expressao AND expressao 
-- On SAIDA_LINHA reduce production expressao -> expressao AND expressao 
-- On SAIDA reduce production expressao -> expressao AND expressao 
-- On RETURN reduce production expressao -> expressao AND expressao 
-- On OR reduce production expressao -> expressao AND expressao 
-- On IF reduce production expressao -> expressao AND expressao 
-- On ID reduce production expressao -> expressao AND expressao 
-- On FWHILE reduce production expressao -> expressao AND expressao 
-- On FSWITCH reduce production expressao -> expressao AND expressao 
-- On FPROGRAMA reduce production expressao -> expressao AND expressao 
-- On FPAR reduce production expressao -> expressao AND expressao 
-- On FOR reduce production expressao -> expressao AND expressao 
-- On FIF reduce production expressao -> expressao AND expressao 
-- On FFUNCTION reduce production expressao -> expressao AND expressao 
-- On FFOR reduce production expressao -> expressao AND expressao 
-- On ENTRADA reduce production expressao -> expressao AND expressao 
-- On ENTAO reduce production expressao -> expressao AND expressao 
-- On END reduce production expressao -> expressao AND expressao 
-- On ELSE reduce production expressao -> expressao AND expressao 
-- On DO reduce production expressao -> expressao AND expressao 
-- On CASE_DEFAULT reduce production expressao -> expressao AND expressao 
-- On CASE reduce production expressao -> expressao AND expressao 
-- On AND reduce production expressao -> expressao AND expressao 

State 59:
chamada -> ID APAR separated_nonempty_list(VIRG,expressao) . FPAR [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
-- On FPAR shift to state 60

State 60:
chamada -> ID APAR separated_nonempty_list(VIRG,expressao) FPAR . [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
-- On WHILE reduce production chamada -> ID APAR separated_nonempty_list(VIRG,expressao) FPAR 
-- On VIRG reduce production chamada -> ID APAR separated_nonempty_list(VIRG,expressao) FPAR 
-- On SWITCH reduce production chamada -> ID APAR separated_nonempty_list(VIRG,expressao) FPAR 
-- On SAIDA_LINHA reduce production chamada -> ID APAR separated_nonempty_list(VIRG,expressao) FPAR 
-- On SAIDA reduce production chamada -> ID APAR separated_nonempty_list(VIRG,expressao) FPAR 
-- On RETURN reduce production chamada -> ID APAR separated_nonempty_list(VIRG,expressao) FPAR 
-- On RESTO reduce production chamada -> ID APAR separated_nonempty_list(VIRG,expressao) FPAR 
-- On POTEN reduce production chamada -> ID APAR separated_nonempty_list(VIRG,expressao) FPAR 
-- On OR reduce production chamada -> ID APAR separated_nonempty_list(VIRG,expressao) FPAR 
-- On MULTI reduce production chamada -> ID APAR separated_nonempty_list(VIRG,expressao) FPAR 
-- On MENOS reduce production chamada -> ID APAR separated_nonempty_list(VIRG,expressao) FPAR 
-- On MAIS reduce production chamada -> ID APAR separated_nonempty_list(VIRG,expressao) FPAR 
-- On LTE reduce production chamada -> ID APAR separated_nonempty_list(VIRG,expressao) FPAR 
-- On LT reduce production chamada -> ID APAR separated_nonempty_list(VIRG,expressao) FPAR 
-- On IF reduce production chamada -> ID APAR separated_nonempty_list(VIRG,expressao) FPAR 
-- On ID reduce production chamada -> ID APAR separated_nonempty_list(VIRG,expressao) FPAR 
-- On GTE reduce production chamada -> ID APAR separated_nonempty_list(VIRG,expressao) FPAR 
-- On GT reduce production chamada -> ID APAR separated_nonempty_list(VIRG,expressao) FPAR 
-- On FWHILE reduce production chamada -> ID APAR separated_nonempty_list(VIRG,expressao) FPAR 
-- On FSWITCH reduce production chamada -> ID APAR separated_nonempty_list(VIRG,expressao) FPAR 
-- On FPROGRAMA reduce production chamada -> ID APAR separated_nonempty_list(VIRG,expressao) FPAR 
-- On FPAR reduce production chamada -> ID APAR separated_nonempty_list(VIRG,expressao) FPAR 
-- On FOR reduce production chamada -> ID APAR separated_nonempty_list(VIRG,expressao) FPAR 
-- On FIF reduce production chamada -> ID APAR separated_nonempty_list(VIRG,expressao) FPAR 
-- On FFUNCTION reduce production chamada -> ID APAR separated_nonempty_list(VIRG,expressao) FPAR 
-- On FFOR reduce production chamada -> ID APAR separated_nonempty_list(VIRG,expressao) FPAR 
-- On EQUALS reduce production chamada -> ID APAR separated_nonempty_list(VIRG,expressao) FPAR 
-- On ENTRADA reduce production chamada -> ID APAR separated_nonempty_list(VIRG,expressao) FPAR 
-- On ENTAO reduce production chamada -> ID APAR separated_nonempty_list(VIRG,expressao) FPAR 
-- On END reduce production chamada -> ID APAR separated_nonempty_list(VIRG,expressao) FPAR 
-- On ELSE reduce production chamada -> ID APAR separated_nonempty_list(VIRG,expressao) FPAR 
-- On DO reduce production chamada -> ID APAR separated_nonempty_list(VIRG,expressao) FPAR 
-- On DIV reduce production chamada -> ID APAR separated_nonempty_list(VIRG,expressao) FPAR 
-- On DIFER reduce production chamada -> ID APAR separated_nonempty_list(VIRG,expressao) FPAR 
-- On CASE_DEFAULT reduce production chamada -> ID APAR separated_nonempty_list(VIRG,expressao) FPAR 
-- On CASE reduce production chamada -> ID APAR separated_nonempty_list(VIRG,expressao) FPAR 
-- On AND reduce production chamada -> ID APAR separated_nonempty_list(VIRG,expressao) FPAR 

State 61:
expressao -> expressao . MAIS expressao [ VIRG RESTO POTEN OR MULTI MENOS MAIS LTE LT GTE GT FPAR EQUALS DIV DIFER AND ]
expressao -> expressao . MENOS expressao [ VIRG RESTO POTEN OR MULTI MENOS MAIS LTE LT GTE GT FPAR EQUALS DIV DIFER AND ]
expressao -> expressao . MULTI expressao [ VIRG RESTO POTEN OR MULTI MENOS MAIS LTE LT GTE GT FPAR EQUALS DIV DIFER AND ]
expressao -> expressao . DIV expressao [ VIRG RESTO POTEN OR MULTI MENOS MAIS LTE LT GTE GT FPAR EQUALS DIV DIFER AND ]
expressao -> expressao . RESTO expressao [ VIRG RESTO POTEN OR MULTI MENOS MAIS LTE LT GTE GT FPAR EQUALS DIV DIFER AND ]
expressao -> expressao . POTEN expressao [ VIRG RESTO POTEN OR MULTI MENOS MAIS LTE LT GTE GT FPAR EQUALS DIV DIFER AND ]
expressao -> expressao . LT expressao [ VIRG RESTO POTEN OR MULTI MENOS MAIS LTE LT GTE GT FPAR EQUALS DIV DIFER AND ]
expressao -> expressao . GT expressao [ VIRG RESTO POTEN OR MULTI MENOS MAIS LTE LT GTE GT FPAR EQUALS DIV DIFER AND ]
expressao -> expressao . LTE expressao [ VIRG RESTO POTEN OR MULTI MENOS MAIS LTE LT GTE GT FPAR EQUALS DIV DIFER AND ]
expressao -> expressao . GTE expressao [ VIRG RESTO POTEN OR MULTI MENOS MAIS LTE LT GTE GT FPAR EQUALS DIV DIFER AND ]
expressao -> expressao . EQUALS expressao [ VIRG RESTO POTEN OR MULTI MENOS MAIS LTE LT GTE GT FPAR EQUALS DIV DIFER AND ]
expressao -> expressao . DIFER expressao [ VIRG RESTO POTEN OR MULTI MENOS MAIS LTE LT GTE GT FPAR EQUALS DIV DIFER AND ]
expressao -> expressao . AND expressao [ VIRG RESTO POTEN OR MULTI MENOS MAIS LTE LT GTE GT FPAR EQUALS DIV DIFER AND ]
expressao -> expressao . OR expressao [ VIRG RESTO POTEN OR MULTI MENOS MAIS LTE LT GTE GT FPAR EQUALS DIV DIFER AND ]
separated_nonempty_list(VIRG,expressao) -> expressao . [ FPAR ]
separated_nonempty_list(VIRG,expressao) -> expressao . VIRG separated_nonempty_list(VIRG,expressao) [ FPAR ]
-- On VIRG shift to state 62
-- On RESTO shift to state 29
-- On POTEN shift to state 36
-- On OR shift to state 42
-- On MULTI shift to state 31
-- On MENOS shift to state 38
-- On MAIS shift to state 40
-- On LTE shift to state 44
-- On LT shift to state 46
-- On GTE shift to state 48
-- On GT shift to state 50
-- On EQUALS shift to state 52
-- On DIV shift to state 34
-- On DIFER shift to state 54
-- On AND shift to state 57
-- On FPAR reduce production separated_nonempty_list(VIRG,expressao) -> expressao 

State 62:
separated_nonempty_list(VIRG,expressao) -> expressao VIRG . separated_nonempty_list(VIRG,expressao) [ FPAR ]
-- On MENOS shift to state 20
-- On LITSTRING shift to state 21
-- On LITINT shift to state 22
-- On LITCHAR shift to state 23
-- On ID shift to state 24
-- On APAR shift to state 26
-- On variavel shift to state 27
-- On separated_nonempty_list(VIRG,expressao) shift to state 63
-- On expressao shift to state 61
-- On chamada shift to state 33

State 63:
separated_nonempty_list(VIRG,expressao) -> expressao VIRG separated_nonempty_list(VIRG,expressao) . [ FPAR ]
-- On FPAR reduce production separated_nonempty_list(VIRG,expressao) -> expressao VIRG separated_nonempty_list(VIRG,expressao) 

State 64:
expressao -> expressao . MAIS expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . MENOS expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . MULTI expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . DIV expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . RESTO expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . POTEN expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . LT expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . GT expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . LTE expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . GTE expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . EQUALS expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . DIFER expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . AND expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . OR expressao [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> MENOS expressao . [ WHILE VIRG SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FPAR FOR FIF FFUNCTION FFOR EQUALS ENTRADA ENTAO END ELSE DO DIV DIFER CASE_DEFAULT CASE AND ]
-- On MULTI shift to state 31
-- On DIV shift to state 34
-- On WHILE reduce production expressao -> MENOS expressao 
-- On VIRG reduce production expressao -> MENOS expressao 
-- On SWITCH reduce production expressao -> MENOS expressao 
-- On SAIDA_LINHA reduce production expressao -> MENOS expressao 
-- On SAIDA reduce production expressao -> MENOS expressao 
-- On RETURN reduce production expressao -> MENOS expressao 
-- On RESTO reduce production expressao -> MENOS expressao 
-- On POTEN reduce production expressao -> MENOS expressao 
-- On OR reduce production expressao -> MENOS expressao 
-- On MENOS reduce production expressao -> MENOS expressao 
-- On MAIS reduce production expressao -> MENOS expressao 
-- On LTE reduce production expressao -> MENOS expressao 
-- On LT reduce production expressao -> MENOS expressao 
-- On IF reduce production expressao -> MENOS expressao 
-- On ID reduce production expressao -> MENOS expressao 
-- On GTE reduce production expressao -> MENOS expressao 
-- On GT reduce production expressao -> MENOS expressao 
-- On FWHILE reduce production expressao -> MENOS expressao 
-- On FSWITCH reduce production expressao -> MENOS expressao 
-- On FPROGRAMA reduce production expressao -> MENOS expressao 
-- On FPAR reduce production expressao -> MENOS expressao 
-- On FOR reduce production expressao -> MENOS expressao 
-- On FIF reduce production expressao -> MENOS expressao 
-- On FFUNCTION reduce production expressao -> MENOS expressao 
-- On FFOR reduce production expressao -> MENOS expressao 
-- On EQUALS reduce production expressao -> MENOS expressao 
-- On ENTRADA reduce production expressao -> MENOS expressao 
-- On ENTAO reduce production expressao -> MENOS expressao 
-- On END reduce production expressao -> MENOS expressao 
-- On ELSE reduce production expressao -> MENOS expressao 
-- On DO reduce production expressao -> MENOS expressao 
-- On DIFER reduce production expressao -> MENOS expressao 
-- On CASE_DEFAULT reduce production expressao -> MENOS expressao 
-- On CASE reduce production expressao -> MENOS expressao 
-- On AND reduce production expressao -> MENOS expressao 

State 65:
comando_enquanto -> WHILE expressao . DO nonempty_list(comando) FWHILE [ WHILE SWITCH SAIDA_LINHA SAIDA RETURN IF ID FWHILE FSWITCH FPROGRAMA FOR FIF FFUNCTION FFOR ENTRADA ELSE CASE_DEFAULT CASE ]
expressao -> expressao . MAIS expressao [ RESTO POTEN OR MULTI MENOS MAIS LTE LT GTE GT EQUALS DO DIV DIFER AND ]
expressao -> expressao . MENOS expressao [ RESTO POTEN OR MULTI MENOS MAIS LTE LT GTE GT EQUALS DO DIV DIFER AND ]
expressao -> expressao . MULTI expressao [ RESTO POTEN OR MULTI MENOS MAIS LTE LT GTE GT EQUALS DO DIV DIFER AND ]
expressao -> expressao . DIV expressao [ RESTO POTEN OR MULTI MENOS MAIS LTE LT GTE GT EQUALS DO DIV DIFER AND ]
expressao -> expressao . RESTO expressao [ RESTO POTEN OR MULTI MENOS MAIS LTE LT GTE GT EQUALS DO DIV DIFER AND ]
expressao -> expressao . POTEN expressao [ RESTO POTEN OR MULTI MENOS MAIS LTE LT GTE GT EQUALS DO DIV DIFER AND ]
expressao -> expressao . LT expressao [ RESTO POTEN OR MULTI MENOS MAIS LTE LT GTE GT EQUALS DO DIV DIFER AND ]
expressao -> expressao . GT expressao [ RESTO POTEN OR MULTI MENOS MAIS LTE LT GTE GT EQUALS DO DIV DIFER AND ]
expressao -> expressao . LTE expressao [ RESTO POTEN OR MULTI MENOS MAIS LTE LT GTE GT EQUALS DO DIV DIFER AND ]
expressao -> expressao . GTE expressao [ RESTO POTEN OR MULTI MENOS MAIS LTE LT GTE GT EQUALS DO DIV DIFER AND ]
expressao -> expressao . EQUALS expressao [ RESTO POTEN OR MULTI MENOS MAIS LTE LT GTE GT EQUALS DO DIV DIFER AND ]
expressao -> expressao . DIFER expressao [ RESTO POTEN OR MULTI MENOS MAIS LTE LT GTE GT EQUALS DO DIV DIFER AND ]
expressao -> expressao . AND expressao [ RESTO POTEN OR MULTI MENOS MAIS LTE LT GTE GT EQUALS DO DIV DIFER AND ]
expressao -> expressao . OR expressao [ RESTO POTEN OR MULTI MENOS MAIS LTE LT GTE GT EQUALS DO DIV DIFER AND ]
-- On RESTO shift to state 29
-- On POTEN shift to state 36
-- On OR shift to state 42
-- On MULTI shift to state 31
-- On MENOS shift to state 38
-- On MAIS shift to state 40
-- On LTE shift to state 44
-- On LT shift to state 46
-- On GTE shift to state 48
-- On GT shift to state 50
-- On EQUALS shift to state 52
-- On DO shift to state 66
-- On DIV shift to state 34
-- On DIFER shift to state 54
-- On AND shift to state 57

State 66:
comando_enquanto -> WHILE expressao DO . nonempty_list(comando) FWHILE [ WHILE SWITCH SAIDA_LINHA SAIDA RETURN IF ID FWHILE FSWITCH FPROGRAMA FOR FIF FFUNCTION FFOR ENTRADA ELSE CASE_DEFAULT CASE ]
-- On WHILE shift to state 19
-- On SWITCH shift to state 67
-- On SAIDA_LINHA shift to state 72
-- On SAIDA shift to state 76
-- On RETURN shift to state 80
-- On IF shift to state 82
-- On ID shift to state 24
-- On FOR shift to state 85
-- On ENTRADA shift to state 92
-- On variavel shift to state 96
-- On nonempty_list(comando) shift to state 128
-- On comando_switch shift to state 101
-- On comando_se shift to state 102
-- On comando_saida_l shift to state 103
-- On comando_saida shift to state 104
-- On comando_return shift to state 105
-- On comando_for shift to state 106
-- On comando_entrada shift to state 107
-- On comando_enquanto shift to state 108
-- On comando_chamada shift to state 109
-- On comando_atribuicao shift to state 110
-- On comando shift to state 111
-- On chamada shift to state 113

State 67:
comando_switch -> SWITCH . variavel nonempty_list(caso) option(default) FSWITCH [ WHILE SWITCH SAIDA_LINHA SAIDA RETURN IF ID FWHILE FSWITCH FPROGRAMA FOR FIF FFUNCTION FFOR ENTRADA ELSE CASE_DEFAULT CASE ]
-- On ID shift to state 68
-- On variavel shift to state 69

State 68:
variavel -> ID . [ CASE BEGIN ]
-- On CASE reduce production variavel -> ID 
-- On BEGIN reduce production variavel -> ID 

State 69:
comando_switch -> SWITCH variavel . nonempty_list(caso) option(default) FSWITCH [ WHILE SWITCH SAIDA_LINHA SAIDA RETURN IF ID FWHILE FSWITCH FPROGRAMA FOR FIF FFUNCTION FFOR ENTRADA ELSE CASE_DEFAULT CASE ]
-- On CASE shift to state 70
-- On nonempty_list(caso) shift to state 120
-- On caso shift to state 126

State 70:
caso -> CASE . expressao nonempty_list(comando) [ FSWITCH CASE_DEFAULT CASE ]
-- On MENOS shift to state 20
-- On LITSTRING shift to state 21
-- On LITINT shift to state 22
-- On LITCHAR shift to state 23
-- On ID shift to state 24
-- On APAR shift to state 26
-- On variavel shift to state 27
-- On expressao shift to state 71
-- On chamada shift to state 33

State 71:
caso -> CASE expressao . nonempty_list(comando) [ FSWITCH CASE_DEFAULT CASE ]
expressao -> expressao . MAIS expressao [ WHILE SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FOR EQUALS ENTRADA DIV DIFER AND ]
expressao -> expressao . MENOS expressao [ WHILE SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FOR EQUALS ENTRADA DIV DIFER AND ]
expressao -> expressao . MULTI expressao [ WHILE SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FOR EQUALS ENTRADA DIV DIFER AND ]
expressao -> expressao . DIV expressao [ WHILE SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FOR EQUALS ENTRADA DIV DIFER AND ]
expressao -> expressao . RESTO expressao [ WHILE SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FOR EQUALS ENTRADA DIV DIFER AND ]
expressao -> expressao . POTEN expressao [ WHILE SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FOR EQUALS ENTRADA DIV DIFER AND ]
expressao -> expressao . LT expressao [ WHILE SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FOR EQUALS ENTRADA DIV DIFER AND ]
expressao -> expressao . GT expressao [ WHILE SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FOR EQUALS ENTRADA DIV DIFER AND ]
expressao -> expressao . LTE expressao [ WHILE SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FOR EQUALS ENTRADA DIV DIFER AND ]
expressao -> expressao . GTE expressao [ WHILE SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FOR EQUALS ENTRADA DIV DIFER AND ]
expressao -> expressao . EQUALS expressao [ WHILE SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FOR EQUALS ENTRADA DIV DIFER AND ]
expressao -> expressao . DIFER expressao [ WHILE SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FOR EQUALS ENTRADA DIV DIFER AND ]
expressao -> expressao . AND expressao [ WHILE SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FOR EQUALS ENTRADA DIV DIFER AND ]
expressao -> expressao . OR expressao [ WHILE SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FOR EQUALS ENTRADA DIV DIFER AND ]
-- On WHILE shift to state 19
-- On SWITCH shift to state 67
-- On SAIDA_LINHA shift to state 72
-- On SAIDA shift to state 76
-- On RETURN shift to state 80
-- On RESTO shift to state 29
-- On POTEN shift to state 36
-- On OR shift to state 42
-- On MULTI shift to state 31
-- On MENOS shift to state 38
-- On MAIS shift to state 40
-- On LTE shift to state 44
-- On LT shift to state 46
-- On IF shift to state 82
-- On ID shift to state 24
-- On GTE shift to state 48
-- On GT shift to state 50
-- On FOR shift to state 85
-- On EQUALS shift to state 52
-- On ENTRADA shift to state 92
-- On DIV shift to state 34
-- On DIFER shift to state 54
-- On AND shift to state 57
-- On variavel shift to state 96
-- On nonempty_list(comando) shift to state 119
-- On comando_switch shift to state 101
-- On comando_se shift to state 102
-- On comando_saida_l shift to state 103
-- On comando_saida shift to state 104
-- On comando_return shift to state 105
-- On comando_for shift to state 106
-- On comando_entrada shift to state 107
-- On comando_enquanto shift to state 108
-- On comando_chamada shift to state 109
-- On comando_atribuicao shift to state 110
-- On comando shift to state 111
-- On chamada shift to state 113

State 72:
comando_saida_l -> SAIDA_LINHA . APAR separated_nonempty_list(VIRG,expressao) FPAR [ WHILE SWITCH SAIDA_LINHA SAIDA RETURN IF ID FWHILE FSWITCH FPROGRAMA FOR FIF FFUNCTION FFOR ENTRADA ELSE CASE_DEFAULT CASE ]
-- On APAR shift to state 73

State 73:
comando_saida_l -> SAIDA_LINHA APAR . separated_nonempty_list(VIRG,expressao) FPAR [ WHILE SWITCH SAIDA_LINHA SAIDA RETURN IF ID FWHILE FSWITCH FPROGRAMA FOR FIF FFUNCTION FFOR ENTRADA ELSE CASE_DEFAULT CASE ]
-- On MENOS shift to state 20
-- On LITSTRING shift to state 21
-- On LITINT shift to state 22
-- On LITCHAR shift to state 23
-- On ID shift to state 24
-- On APAR shift to state 26
-- On variavel shift to state 27
-- On separated_nonempty_list(VIRG,expressao) shift to state 74
-- On expressao shift to state 61
-- On chamada shift to state 33

State 74:
comando_saida_l -> SAIDA_LINHA APAR separated_nonempty_list(VIRG,expressao) . FPAR [ WHILE SWITCH SAIDA_LINHA SAIDA RETURN IF ID FWHILE FSWITCH FPROGRAMA FOR FIF FFUNCTION FFOR ENTRADA ELSE CASE_DEFAULT CASE ]
-- On FPAR shift to state 75

State 75:
comando_saida_l -> SAIDA_LINHA APAR separated_nonempty_list(VIRG,expressao) FPAR . [ WHILE SWITCH SAIDA_LINHA SAIDA RETURN IF ID FWHILE FSWITCH FPROGRAMA FOR FIF FFUNCTION FFOR ENTRADA ELSE CASE_DEFAULT CASE ]
-- On WHILE reduce production comando_saida_l -> SAIDA_LINHA APAR separated_nonempty_list(VIRG,expressao) FPAR 
-- On SWITCH reduce production comando_saida_l -> SAIDA_LINHA APAR separated_nonempty_list(VIRG,expressao) FPAR 
-- On SAIDA_LINHA reduce production comando_saida_l -> SAIDA_LINHA APAR separated_nonempty_list(VIRG,expressao) FPAR 
-- On SAIDA reduce production comando_saida_l -> SAIDA_LINHA APAR separated_nonempty_list(VIRG,expressao) FPAR 
-- On RETURN reduce production comando_saida_l -> SAIDA_LINHA APAR separated_nonempty_list(VIRG,expressao) FPAR 
-- On IF reduce production comando_saida_l -> SAIDA_LINHA APAR separated_nonempty_list(VIRG,expressao) FPAR 
-- On ID reduce production comando_saida_l -> SAIDA_LINHA APAR separated_nonempty_list(VIRG,expressao) FPAR 
-- On FWHILE reduce production comando_saida_l -> SAIDA_LINHA APAR separated_nonempty_list(VIRG,expressao) FPAR 
-- On FSWITCH reduce production comando_saida_l -> SAIDA_LINHA APAR separated_nonempty_list(VIRG,expressao) FPAR 
-- On FPROGRAMA reduce production comando_saida_l -> SAIDA_LINHA APAR separated_nonempty_list(VIRG,expressao) FPAR 
-- On FOR reduce production comando_saida_l -> SAIDA_LINHA APAR separated_nonempty_list(VIRG,expressao) FPAR 
-- On FIF reduce production comando_saida_l -> SAIDA_LINHA APAR separated_nonempty_list(VIRG,expressao) FPAR 
-- On FFUNCTION reduce production comando_saida_l -> SAIDA_LINHA APAR separated_nonempty_list(VIRG,expressao) FPAR 
-- On FFOR reduce production comando_saida_l -> SAIDA_LINHA APAR separated_nonempty_list(VIRG,expressao) FPAR 
-- On ENTRADA reduce production comando_saida_l -> SAIDA_LINHA APAR separated_nonempty_list(VIRG,expressao) FPAR 
-- On ELSE reduce production comando_saida_l -> SAIDA_LINHA APAR separated_nonempty_list(VIRG,expressao) FPAR 
-- On CASE_DEFAULT reduce production comando_saida_l -> SAIDA_LINHA APAR separated_nonempty_list(VIRG,expressao) FPAR 
-- On CASE reduce production comando_saida_l -> SAIDA_LINHA APAR separated_nonempty_list(VIRG,expressao) FPAR 

State 76:
comando_saida -> SAIDA . APAR separated_nonempty_list(VIRG,expressao) FPAR [ WHILE SWITCH SAIDA_LINHA SAIDA RETURN IF ID FWHILE FSWITCH FPROGRAMA FOR FIF FFUNCTION FFOR ENTRADA ELSE CASE_DEFAULT CASE ]
-- On APAR shift to state 77

State 77:
comando_saida -> SAIDA APAR . separated_nonempty_list(VIRG,expressao) FPAR [ WHILE SWITCH SAIDA_LINHA SAIDA RETURN IF ID FWHILE FSWITCH FPROGRAMA FOR FIF FFUNCTION FFOR ENTRADA ELSE CASE_DEFAULT CASE ]
-- On MENOS shift to state 20
-- On LITSTRING shift to state 21
-- On LITINT shift to state 22
-- On LITCHAR shift to state 23
-- On ID shift to state 24
-- On APAR shift to state 26
-- On variavel shift to state 27
-- On separated_nonempty_list(VIRG,expressao) shift to state 78
-- On expressao shift to state 61
-- On chamada shift to state 33

State 78:
comando_saida -> SAIDA APAR separated_nonempty_list(VIRG,expressao) . FPAR [ WHILE SWITCH SAIDA_LINHA SAIDA RETURN IF ID FWHILE FSWITCH FPROGRAMA FOR FIF FFUNCTION FFOR ENTRADA ELSE CASE_DEFAULT CASE ]
-- On FPAR shift to state 79

State 79:
comando_saida -> SAIDA APAR separated_nonempty_list(VIRG,expressao) FPAR . [ WHILE SWITCH SAIDA_LINHA SAIDA RETURN IF ID FWHILE FSWITCH FPROGRAMA FOR FIF FFUNCTION FFOR ENTRADA ELSE CASE_DEFAULT CASE ]
-- On WHILE reduce production comando_saida -> SAIDA APAR separated_nonempty_list(VIRG,expressao) FPAR 
-- On SWITCH reduce production comando_saida -> SAIDA APAR separated_nonempty_list(VIRG,expressao) FPAR 
-- On SAIDA_LINHA reduce production comando_saida -> SAIDA APAR separated_nonempty_list(VIRG,expressao) FPAR 
-- On SAIDA reduce production comando_saida -> SAIDA APAR separated_nonempty_list(VIRG,expressao) FPAR 
-- On RETURN reduce production comando_saida -> SAIDA APAR separated_nonempty_list(VIRG,expressao) FPAR 
-- On IF reduce production comando_saida -> SAIDA APAR separated_nonempty_list(VIRG,expressao) FPAR 
-- On ID reduce production comando_saida -> SAIDA APAR separated_nonempty_list(VIRG,expressao) FPAR 
-- On FWHILE reduce production comando_saida -> SAIDA APAR separated_nonempty_list(VIRG,expressao) FPAR 
-- On FSWITCH reduce production comando_saida -> SAIDA APAR separated_nonempty_list(VIRG,expressao) FPAR 
-- On FPROGRAMA reduce production comando_saida -> SAIDA APAR separated_nonempty_list(VIRG,expressao) FPAR 
-- On FOR reduce production comando_saida -> SAIDA APAR separated_nonempty_list(VIRG,expressao) FPAR 
-- On FIF reduce production comando_saida -> SAIDA APAR separated_nonempty_list(VIRG,expressao) FPAR 
-- On FFUNCTION reduce production comando_saida -> SAIDA APAR separated_nonempty_list(VIRG,expressao) FPAR 
-- On FFOR reduce production comando_saida -> SAIDA APAR separated_nonempty_list(VIRG,expressao) FPAR 
-- On ENTRADA reduce production comando_saida -> SAIDA APAR separated_nonempty_list(VIRG,expressao) FPAR 
-- On ELSE reduce production comando_saida -> SAIDA APAR separated_nonempty_list(VIRG,expressao) FPAR 
-- On CASE_DEFAULT reduce production comando_saida -> SAIDA APAR separated_nonempty_list(VIRG,expressao) FPAR 
-- On CASE reduce production comando_saida -> SAIDA APAR separated_nonempty_list(VIRG,expressao) FPAR 

State 80:
comando_return -> RETURN . expressao [ WHILE SWITCH SAIDA_LINHA SAIDA RETURN IF ID FWHILE FSWITCH FPROGRAMA FOR FIF FFUNCTION FFOR ENTRADA ELSE CASE_DEFAULT CASE ]
-- On MENOS shift to state 20
-- On LITSTRING shift to state 21
-- On LITINT shift to state 22
-- On LITCHAR shift to state 23
-- On ID shift to state 24
-- On APAR shift to state 26
-- On variavel shift to state 27
-- On expressao shift to state 81
-- On chamada shift to state 33

State 81:
comando_return -> RETURN expressao . [ WHILE SWITCH SAIDA_LINHA SAIDA RETURN IF ID FWHILE FSWITCH FPROGRAMA FOR FIF FFUNCTION FFOR ENTRADA ELSE CASE_DEFAULT CASE ]
expressao -> expressao . MAIS expressao [ WHILE SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FOR FIF FFUNCTION FFOR EQUALS ENTRADA ELSE DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . MENOS expressao [ WHILE SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FOR FIF FFUNCTION FFOR EQUALS ENTRADA ELSE DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . MULTI expressao [ WHILE SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FOR FIF FFUNCTION FFOR EQUALS ENTRADA ELSE DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . DIV expressao [ WHILE SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FOR FIF FFUNCTION FFOR EQUALS ENTRADA ELSE DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . RESTO expressao [ WHILE SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FOR FIF FFUNCTION FFOR EQUALS ENTRADA ELSE DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . POTEN expressao [ WHILE SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FOR FIF FFUNCTION FFOR EQUALS ENTRADA ELSE DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . LT expressao [ WHILE SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FOR FIF FFUNCTION FFOR EQUALS ENTRADA ELSE DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . GT expressao [ WHILE SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FOR FIF FFUNCTION FFOR EQUALS ENTRADA ELSE DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . LTE expressao [ WHILE SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FOR FIF FFUNCTION FFOR EQUALS ENTRADA ELSE DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . GTE expressao [ WHILE SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FOR FIF FFUNCTION FFOR EQUALS ENTRADA ELSE DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . EQUALS expressao [ WHILE SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FOR FIF FFUNCTION FFOR EQUALS ENTRADA ELSE DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . DIFER expressao [ WHILE SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FOR FIF FFUNCTION FFOR EQUALS ENTRADA ELSE DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . AND expressao [ WHILE SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FOR FIF FFUNCTION FFOR EQUALS ENTRADA ELSE DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . OR expressao [ WHILE SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FOR FIF FFUNCTION FFOR EQUALS ENTRADA ELSE DIV DIFER CASE_DEFAULT CASE AND ]
-- On RESTO shift to state 29
-- On POTEN shift to state 36
-- On OR shift to state 42
-- On MULTI shift to state 31
-- On MENOS shift to state 38
-- On MAIS shift to state 40
-- On LTE shift to state 44
-- On LT shift to state 46
-- On GTE shift to state 48
-- On GT shift to state 50
-- On EQUALS shift to state 52
-- On DIV shift to state 34
-- On DIFER shift to state 54
-- On AND shift to state 57
-- On WHILE reduce production comando_return -> RETURN expressao 
-- On SWITCH reduce production comando_return -> RETURN expressao 
-- On SAIDA_LINHA reduce production comando_return -> RETURN expressao 
-- On SAIDA reduce production comando_return -> RETURN expressao 
-- On RETURN reduce production comando_return -> RETURN expressao 
-- On IF reduce production comando_return -> RETURN expressao 
-- On ID reduce production comando_return -> RETURN expressao 
-- On FWHILE reduce production comando_return -> RETURN expressao 
-- On FSWITCH reduce production comando_return -> RETURN expressao 
-- On FPROGRAMA reduce production comando_return -> RETURN expressao 
-- On FOR reduce production comando_return -> RETURN expressao 
-- On FIF reduce production comando_return -> RETURN expressao 
-- On FFUNCTION reduce production comando_return -> RETURN expressao 
-- On FFOR reduce production comando_return -> RETURN expressao 
-- On ENTRADA reduce production comando_return -> RETURN expressao 
-- On ELSE reduce production comando_return -> RETURN expressao 
-- On CASE_DEFAULT reduce production comando_return -> RETURN expressao 
-- On CASE reduce production comando_return -> RETURN expressao 

State 82:
comando_se -> IF . expressao ENTAO nonempty_list(comando) option(__anonymous_0) FIF [ WHILE SWITCH SAIDA_LINHA SAIDA RETURN IF ID FWHILE FSWITCH FPROGRAMA FOR FIF FFUNCTION FFOR ENTRADA ELSE CASE_DEFAULT CASE ]
-- On MENOS shift to state 20
-- On LITSTRING shift to state 21
-- On LITINT shift to state 22
-- On LITCHAR shift to state 23
-- On ID shift to state 24
-- On APAR shift to state 26
-- On variavel shift to state 27
-- On expressao shift to state 83
-- On chamada shift to state 33

State 83:
comando_se -> IF expressao . ENTAO nonempty_list(comando) option(__anonymous_0) FIF [ WHILE SWITCH SAIDA_LINHA SAIDA RETURN IF ID FWHILE FSWITCH FPROGRAMA FOR FIF FFUNCTION FFOR ENTRADA ELSE CASE_DEFAULT CASE ]
expressao -> expressao . MAIS expressao [ RESTO POTEN OR MULTI MENOS MAIS LTE LT GTE GT EQUALS ENTAO DIV DIFER AND ]
expressao -> expressao . MENOS expressao [ RESTO POTEN OR MULTI MENOS MAIS LTE LT GTE GT EQUALS ENTAO DIV DIFER AND ]
expressao -> expressao . MULTI expressao [ RESTO POTEN OR MULTI MENOS MAIS LTE LT GTE GT EQUALS ENTAO DIV DIFER AND ]
expressao -> expressao . DIV expressao [ RESTO POTEN OR MULTI MENOS MAIS LTE LT GTE GT EQUALS ENTAO DIV DIFER AND ]
expressao -> expressao . RESTO expressao [ RESTO POTEN OR MULTI MENOS MAIS LTE LT GTE GT EQUALS ENTAO DIV DIFER AND ]
expressao -> expressao . POTEN expressao [ RESTO POTEN OR MULTI MENOS MAIS LTE LT GTE GT EQUALS ENTAO DIV DIFER AND ]
expressao -> expressao . LT expressao [ RESTO POTEN OR MULTI MENOS MAIS LTE LT GTE GT EQUALS ENTAO DIV DIFER AND ]
expressao -> expressao . GT expressao [ RESTO POTEN OR MULTI MENOS MAIS LTE LT GTE GT EQUALS ENTAO DIV DIFER AND ]
expressao -> expressao . LTE expressao [ RESTO POTEN OR MULTI MENOS MAIS LTE LT GTE GT EQUALS ENTAO DIV DIFER AND ]
expressao -> expressao . GTE expressao [ RESTO POTEN OR MULTI MENOS MAIS LTE LT GTE GT EQUALS ENTAO DIV DIFER AND ]
expressao -> expressao . EQUALS expressao [ RESTO POTEN OR MULTI MENOS MAIS LTE LT GTE GT EQUALS ENTAO DIV DIFER AND ]
expressao -> expressao . DIFER expressao [ RESTO POTEN OR MULTI MENOS MAIS LTE LT GTE GT EQUALS ENTAO DIV DIFER AND ]
expressao -> expressao . AND expressao [ RESTO POTEN OR MULTI MENOS MAIS LTE LT GTE GT EQUALS ENTAO DIV DIFER AND ]
expressao -> expressao . OR expressao [ RESTO POTEN OR MULTI MENOS MAIS LTE LT GTE GT EQUALS ENTAO DIV DIFER AND ]
-- On RESTO shift to state 29
-- On POTEN shift to state 36
-- On OR shift to state 42
-- On MULTI shift to state 31
-- On MENOS shift to state 38
-- On MAIS shift to state 40
-- On LTE shift to state 44
-- On LT shift to state 46
-- On GTE shift to state 48
-- On GT shift to state 50
-- On EQUALS shift to state 52
-- On ENTAO shift to state 84
-- On DIV shift to state 34
-- On DIFER shift to state 54
-- On AND shift to state 57

State 84:
comando_se -> IF expressao ENTAO . nonempty_list(comando) option(__anonymous_0) FIF [ WHILE SWITCH SAIDA_LINHA SAIDA RETURN IF ID FWHILE FSWITCH FPROGRAMA FOR FIF FFUNCTION FFOR ENTRADA ELSE CASE_DEFAULT CASE ]
-- On WHILE shift to state 19
-- On SWITCH shift to state 67
-- On SAIDA_LINHA shift to state 72
-- On SAIDA shift to state 76
-- On RETURN shift to state 80
-- On IF shift to state 82
-- On ID shift to state 24
-- On FOR shift to state 85
-- On ENTRADA shift to state 92
-- On variavel shift to state 96
-- On nonempty_list(comando) shift to state 114
-- On comando_switch shift to state 101
-- On comando_se shift to state 102
-- On comando_saida_l shift to state 103
-- On comando_saida shift to state 104
-- On comando_return shift to state 105
-- On comando_for shift to state 106
-- On comando_entrada shift to state 107
-- On comando_enquanto shift to state 108
-- On comando_chamada shift to state 109
-- On comando_atribuicao shift to state 110
-- On comando shift to state 111
-- On chamada shift to state 113

State 85:
comando_for -> FOR . variavel BEGIN expressao END expressao DO nonempty_list(comando) FFOR [ WHILE SWITCH SAIDA_LINHA SAIDA RETURN IF ID FWHILE FSWITCH FPROGRAMA FOR FIF FFUNCTION FFOR ENTRADA ELSE CASE_DEFAULT CASE ]
-- On ID shift to state 68
-- On variavel shift to state 86

State 86:
comando_for -> FOR variavel . BEGIN expressao END expressao DO nonempty_list(comando) FFOR [ WHILE SWITCH SAIDA_LINHA SAIDA RETURN IF ID FWHILE FSWITCH FPROGRAMA FOR FIF FFUNCTION FFOR ENTRADA ELSE CASE_DEFAULT CASE ]
-- On BEGIN shift to state 87

State 87:
comando_for -> FOR variavel BEGIN . expressao END expressao DO nonempty_list(comando) FFOR [ WHILE SWITCH SAIDA_LINHA SAIDA RETURN IF ID FWHILE FSWITCH FPROGRAMA FOR FIF FFUNCTION FFOR ENTRADA ELSE CASE_DEFAULT CASE ]
-- On MENOS shift to state 20
-- On LITSTRING shift to state 21
-- On LITINT shift to state 22
-- On LITCHAR shift to state 23
-- On ID shift to state 24
-- On APAR shift to state 26
-- On variavel shift to state 27
-- On expressao shift to state 88
-- On chamada shift to state 33

State 88:
comando_for -> FOR variavel BEGIN expressao . END expressao DO nonempty_list(comando) FFOR [ WHILE SWITCH SAIDA_LINHA SAIDA RETURN IF ID FWHILE FSWITCH FPROGRAMA FOR FIF FFUNCTION FFOR ENTRADA ELSE CASE_DEFAULT CASE ]
expressao -> expressao . MAIS expressao [ RESTO POTEN OR MULTI MENOS MAIS LTE LT GTE GT EQUALS END DIV DIFER AND ]
expressao -> expressao . MENOS expressao [ RESTO POTEN OR MULTI MENOS MAIS LTE LT GTE GT EQUALS END DIV DIFER AND ]
expressao -> expressao . MULTI expressao [ RESTO POTEN OR MULTI MENOS MAIS LTE LT GTE GT EQUALS END DIV DIFER AND ]
expressao -> expressao . DIV expressao [ RESTO POTEN OR MULTI MENOS MAIS LTE LT GTE GT EQUALS END DIV DIFER AND ]
expressao -> expressao . RESTO expressao [ RESTO POTEN OR MULTI MENOS MAIS LTE LT GTE GT EQUALS END DIV DIFER AND ]
expressao -> expressao . POTEN expressao [ RESTO POTEN OR MULTI MENOS MAIS LTE LT GTE GT EQUALS END DIV DIFER AND ]
expressao -> expressao . LT expressao [ RESTO POTEN OR MULTI MENOS MAIS LTE LT GTE GT EQUALS END DIV DIFER AND ]
expressao -> expressao . GT expressao [ RESTO POTEN OR MULTI MENOS MAIS LTE LT GTE GT EQUALS END DIV DIFER AND ]
expressao -> expressao . LTE expressao [ RESTO POTEN OR MULTI MENOS MAIS LTE LT GTE GT EQUALS END DIV DIFER AND ]
expressao -> expressao . GTE expressao [ RESTO POTEN OR MULTI MENOS MAIS LTE LT GTE GT EQUALS END DIV DIFER AND ]
expressao -> expressao . EQUALS expressao [ RESTO POTEN OR MULTI MENOS MAIS LTE LT GTE GT EQUALS END DIV DIFER AND ]
expressao -> expressao . DIFER expressao [ RESTO POTEN OR MULTI MENOS MAIS LTE LT GTE GT EQUALS END DIV DIFER AND ]
expressao -> expressao . AND expressao [ RESTO POTEN OR MULTI MENOS MAIS LTE LT GTE GT EQUALS END DIV DIFER AND ]
expressao -> expressao . OR expressao [ RESTO POTEN OR MULTI MENOS MAIS LTE LT GTE GT EQUALS END DIV DIFER AND ]
-- On RESTO shift to state 29
-- On POTEN shift to state 36
-- On OR shift to state 42
-- On MULTI shift to state 31
-- On MENOS shift to state 38
-- On MAIS shift to state 40
-- On LTE shift to state 44
-- On LT shift to state 46
-- On GTE shift to state 48
-- On GT shift to state 50
-- On EQUALS shift to state 52
-- On END shift to state 89
-- On DIV shift to state 34
-- On DIFER shift to state 54
-- On AND shift to state 57

State 89:
comando_for -> FOR variavel BEGIN expressao END . expressao DO nonempty_list(comando) FFOR [ WHILE SWITCH SAIDA_LINHA SAIDA RETURN IF ID FWHILE FSWITCH FPROGRAMA FOR FIF FFUNCTION FFOR ENTRADA ELSE CASE_DEFAULT CASE ]
-- On MENOS shift to state 20
-- On LITSTRING shift to state 21
-- On LITINT shift to state 22
-- On LITCHAR shift to state 23
-- On ID shift to state 24
-- On APAR shift to state 26
-- On variavel shift to state 27
-- On expressao shift to state 90
-- On chamada shift to state 33

State 90:
comando_for -> FOR variavel BEGIN expressao END expressao . DO nonempty_list(comando) FFOR [ WHILE SWITCH SAIDA_LINHA SAIDA RETURN IF ID FWHILE FSWITCH FPROGRAMA FOR FIF FFUNCTION FFOR ENTRADA ELSE CASE_DEFAULT CASE ]
expressao -> expressao . MAIS expressao [ RESTO POTEN OR MULTI MENOS MAIS LTE LT GTE GT EQUALS DO DIV DIFER AND ]
expressao -> expressao . MENOS expressao [ RESTO POTEN OR MULTI MENOS MAIS LTE LT GTE GT EQUALS DO DIV DIFER AND ]
expressao -> expressao . MULTI expressao [ RESTO POTEN OR MULTI MENOS MAIS LTE LT GTE GT EQUALS DO DIV DIFER AND ]
expressao -> expressao . DIV expressao [ RESTO POTEN OR MULTI MENOS MAIS LTE LT GTE GT EQUALS DO DIV DIFER AND ]
expressao -> expressao . RESTO expressao [ RESTO POTEN OR MULTI MENOS MAIS LTE LT GTE GT EQUALS DO DIV DIFER AND ]
expressao -> expressao . POTEN expressao [ RESTO POTEN OR MULTI MENOS MAIS LTE LT GTE GT EQUALS DO DIV DIFER AND ]
expressao -> expressao . LT expressao [ RESTO POTEN OR MULTI MENOS MAIS LTE LT GTE GT EQUALS DO DIV DIFER AND ]
expressao -> expressao . GT expressao [ RESTO POTEN OR MULTI MENOS MAIS LTE LT GTE GT EQUALS DO DIV DIFER AND ]
expressao -> expressao . LTE expressao [ RESTO POTEN OR MULTI MENOS MAIS LTE LT GTE GT EQUALS DO DIV DIFER AND ]
expressao -> expressao . GTE expressao [ RESTO POTEN OR MULTI MENOS MAIS LTE LT GTE GT EQUALS DO DIV DIFER AND ]
expressao -> expressao . EQUALS expressao [ RESTO POTEN OR MULTI MENOS MAIS LTE LT GTE GT EQUALS DO DIV DIFER AND ]
expressao -> expressao . DIFER expressao [ RESTO POTEN OR MULTI MENOS MAIS LTE LT GTE GT EQUALS DO DIV DIFER AND ]
expressao -> expressao . AND expressao [ RESTO POTEN OR MULTI MENOS MAIS LTE LT GTE GT EQUALS DO DIV DIFER AND ]
expressao -> expressao . OR expressao [ RESTO POTEN OR MULTI MENOS MAIS LTE LT GTE GT EQUALS DO DIV DIFER AND ]
-- On RESTO shift to state 29
-- On POTEN shift to state 36
-- On OR shift to state 42
-- On MULTI shift to state 31
-- On MENOS shift to state 38
-- On MAIS shift to state 40
-- On LTE shift to state 44
-- On LT shift to state 46
-- On GTE shift to state 48
-- On GT shift to state 50
-- On EQUALS shift to state 52
-- On DO shift to state 91
-- On DIV shift to state 34
-- On DIFER shift to state 54
-- On AND shift to state 57

State 91:
comando_for -> FOR variavel BEGIN expressao END expressao DO . nonempty_list(comando) FFOR [ WHILE SWITCH SAIDA_LINHA SAIDA RETURN IF ID FWHILE FSWITCH FPROGRAMA FOR FIF FFUNCTION FFOR ENTRADA ELSE CASE_DEFAULT CASE ]
-- On WHILE shift to state 19
-- On SWITCH shift to state 67
-- On SAIDA_LINHA shift to state 72
-- On SAIDA shift to state 76
-- On RETURN shift to state 80
-- On IF shift to state 82
-- On ID shift to state 24
-- On FOR shift to state 85
-- On ENTRADA shift to state 92
-- On variavel shift to state 96
-- On nonempty_list(comando) shift to state 99
-- On comando_switch shift to state 101
-- On comando_se shift to state 102
-- On comando_saida_l shift to state 103
-- On comando_saida shift to state 104
-- On comando_return shift to state 105
-- On comando_for shift to state 106
-- On comando_entrada shift to state 107
-- On comando_enquanto shift to state 108
-- On comando_chamada shift to state 109
-- On comando_atribuicao shift to state 110
-- On comando shift to state 111
-- On chamada shift to state 113

State 92:
comando_entrada -> ENTRADA . APAR separated_nonempty_list(VIRG,expressao) FPAR [ WHILE SWITCH SAIDA_LINHA SAIDA RETURN IF ID FWHILE FSWITCH FPROGRAMA FOR FIF FFUNCTION FFOR ENTRADA ELSE CASE_DEFAULT CASE ]
-- On APAR shift to state 93

State 93:
comando_entrada -> ENTRADA APAR . separated_nonempty_list(VIRG,expressao) FPAR [ WHILE SWITCH SAIDA_LINHA SAIDA RETURN IF ID FWHILE FSWITCH FPROGRAMA FOR FIF FFUNCTION FFOR ENTRADA ELSE CASE_DEFAULT CASE ]
-- On MENOS shift to state 20
-- On LITSTRING shift to state 21
-- On LITINT shift to state 22
-- On LITCHAR shift to state 23
-- On ID shift to state 24
-- On APAR shift to state 26
-- On variavel shift to state 27
-- On separated_nonempty_list(VIRG,expressao) shift to state 94
-- On expressao shift to state 61
-- On chamada shift to state 33

State 94:
comando_entrada -> ENTRADA APAR separated_nonempty_list(VIRG,expressao) . FPAR [ WHILE SWITCH SAIDA_LINHA SAIDA RETURN IF ID FWHILE FSWITCH FPROGRAMA FOR FIF FFUNCTION FFOR ENTRADA ELSE CASE_DEFAULT CASE ]
-- On FPAR shift to state 95

State 95:
comando_entrada -> ENTRADA APAR separated_nonempty_list(VIRG,expressao) FPAR . [ WHILE SWITCH SAIDA_LINHA SAIDA RETURN IF ID FWHILE FSWITCH FPROGRAMA FOR FIF FFUNCTION FFOR ENTRADA ELSE CASE_DEFAULT CASE ]
-- On WHILE reduce production comando_entrada -> ENTRADA APAR separated_nonempty_list(VIRG,expressao) FPAR 
-- On SWITCH reduce production comando_entrada -> ENTRADA APAR separated_nonempty_list(VIRG,expressao) FPAR 
-- On SAIDA_LINHA reduce production comando_entrada -> ENTRADA APAR separated_nonempty_list(VIRG,expressao) FPAR 
-- On SAIDA reduce production comando_entrada -> ENTRADA APAR separated_nonempty_list(VIRG,expressao) FPAR 
-- On RETURN reduce production comando_entrada -> ENTRADA APAR separated_nonempty_list(VIRG,expressao) FPAR 
-- On IF reduce production comando_entrada -> ENTRADA APAR separated_nonempty_list(VIRG,expressao) FPAR 
-- On ID reduce production comando_entrada -> ENTRADA APAR separated_nonempty_list(VIRG,expressao) FPAR 
-- On FWHILE reduce production comando_entrada -> ENTRADA APAR separated_nonempty_list(VIRG,expressao) FPAR 
-- On FSWITCH reduce production comando_entrada -> ENTRADA APAR separated_nonempty_list(VIRG,expressao) FPAR 
-- On FPROGRAMA reduce production comando_entrada -> ENTRADA APAR separated_nonempty_list(VIRG,expressao) FPAR 
-- On FOR reduce production comando_entrada -> ENTRADA APAR separated_nonempty_list(VIRG,expressao) FPAR 
-- On FIF reduce production comando_entrada -> ENTRADA APAR separated_nonempty_list(VIRG,expressao) FPAR 
-- On FFUNCTION reduce production comando_entrada -> ENTRADA APAR separated_nonempty_list(VIRG,expressao) FPAR 
-- On FFOR reduce production comando_entrada -> ENTRADA APAR separated_nonempty_list(VIRG,expressao) FPAR 
-- On ENTRADA reduce production comando_entrada -> ENTRADA APAR separated_nonempty_list(VIRG,expressao) FPAR 
-- On ELSE reduce production comando_entrada -> ENTRADA APAR separated_nonempty_list(VIRG,expressao) FPAR 
-- On CASE_DEFAULT reduce production comando_entrada -> ENTRADA APAR separated_nonempty_list(VIRG,expressao) FPAR 
-- On CASE reduce production comando_entrada -> ENTRADA APAR separated_nonempty_list(VIRG,expressao) FPAR 

State 96:
comando_atribuicao -> variavel . ATRIB expressao [ WHILE SWITCH SAIDA_LINHA SAIDA RETURN IF ID FWHILE FSWITCH FPROGRAMA FOR FIF FFUNCTION FFOR ENTRADA ELSE CASE_DEFAULT CASE ]
-- On ATRIB shift to state 97

State 97:
comando_atribuicao -> variavel ATRIB . expressao [ WHILE SWITCH SAIDA_LINHA SAIDA RETURN IF ID FWHILE FSWITCH FPROGRAMA FOR FIF FFUNCTION FFOR ENTRADA ELSE CASE_DEFAULT CASE ]
-- On MENOS shift to state 20
-- On LITSTRING shift to state 21
-- On LITINT shift to state 22
-- On LITCHAR shift to state 23
-- On ID shift to state 24
-- On APAR shift to state 26
-- On variavel shift to state 27
-- On expressao shift to state 98
-- On chamada shift to state 33

State 98:
comando_atribuicao -> variavel ATRIB expressao . [ WHILE SWITCH SAIDA_LINHA SAIDA RETURN IF ID FWHILE FSWITCH FPROGRAMA FOR FIF FFUNCTION FFOR ENTRADA ELSE CASE_DEFAULT CASE ]
expressao -> expressao . MAIS expressao [ WHILE SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FOR FIF FFUNCTION FFOR EQUALS ENTRADA ELSE DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . MENOS expressao [ WHILE SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FOR FIF FFUNCTION FFOR EQUALS ENTRADA ELSE DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . MULTI expressao [ WHILE SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FOR FIF FFUNCTION FFOR EQUALS ENTRADA ELSE DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . DIV expressao [ WHILE SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FOR FIF FFUNCTION FFOR EQUALS ENTRADA ELSE DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . RESTO expressao [ WHILE SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FOR FIF FFUNCTION FFOR EQUALS ENTRADA ELSE DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . POTEN expressao [ WHILE SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FOR FIF FFUNCTION FFOR EQUALS ENTRADA ELSE DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . LT expressao [ WHILE SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FOR FIF FFUNCTION FFOR EQUALS ENTRADA ELSE DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . GT expressao [ WHILE SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FOR FIF FFUNCTION FFOR EQUALS ENTRADA ELSE DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . LTE expressao [ WHILE SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FOR FIF FFUNCTION FFOR EQUALS ENTRADA ELSE DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . GTE expressao [ WHILE SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FOR FIF FFUNCTION FFOR EQUALS ENTRADA ELSE DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . EQUALS expressao [ WHILE SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FOR FIF FFUNCTION FFOR EQUALS ENTRADA ELSE DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . DIFER expressao [ WHILE SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FOR FIF FFUNCTION FFOR EQUALS ENTRADA ELSE DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . AND expressao [ WHILE SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FOR FIF FFUNCTION FFOR EQUALS ENTRADA ELSE DIV DIFER CASE_DEFAULT CASE AND ]
expressao -> expressao . OR expressao [ WHILE SWITCH SAIDA_LINHA SAIDA RETURN RESTO POTEN OR MULTI MENOS MAIS LTE LT IF ID GTE GT FWHILE FSWITCH FPROGRAMA FOR FIF FFUNCTION FFOR EQUALS ENTRADA ELSE DIV DIFER CASE_DEFAULT CASE AND ]
-- On RESTO shift to state 29
-- On POTEN shift to state 36
-- On OR shift to state 42
-- On MULTI shift to state 31
-- On MENOS shift to state 38
-- On MAIS shift to state 40
-- On LTE shift to state 44
-- On LT shift to state 46
-- On GTE shift to state 48
-- On GT shift to state 50
-- On EQUALS shift to state 52
-- On DIV shift to state 34
-- On DIFER shift to state 54
-- On AND shift to state 57
-- On WHILE reduce production comando_atribuicao -> variavel ATRIB expressao 
-- On SWITCH reduce production comando_atribuicao -> variavel ATRIB expressao 
-- On SAIDA_LINHA reduce production comando_atribuicao -> variavel ATRIB expressao 
-- On SAIDA reduce production comando_atribuicao -> variavel ATRIB expressao 
-- On RETURN reduce production comando_atribuicao -> variavel ATRIB expressao 
-- On IF reduce production comando_atribuicao -> variavel ATRIB expressao 
-- On ID reduce production comando_atribuicao -> variavel ATRIB expressao 
-- On FWHILE reduce production comando_atribuicao -> variavel ATRIB expressao 
-- On FSWITCH reduce production comando_atribuicao -> variavel ATRIB expressao 
-- On FPROGRAMA reduce production comando_atribuicao -> variavel ATRIB expressao 
-- On FOR reduce production comando_atribuicao -> variavel ATRIB expressao 
-- On FIF reduce production comando_atribuicao -> variavel ATRIB expressao 
-- On FFUNCTION reduce production comando_atribuicao -> variavel ATRIB expressao 
-- On FFOR reduce production comando_atribuicao -> variavel ATRIB expressao 
-- On ENTRADA reduce production comando_atribuicao -> variavel ATRIB expressao 
-- On ELSE reduce production comando_atribuicao -> variavel ATRIB expressao 
-- On CASE_DEFAULT reduce production comando_atribuicao -> variavel ATRIB expressao 
-- On CASE reduce production comando_atribuicao -> variavel ATRIB expressao 

State 99:
comando_for -> FOR variavel BEGIN expressao END expressao DO nonempty_list(comando) . FFOR [ WHILE SWITCH SAIDA_LINHA SAIDA RETURN IF ID FWHILE FSWITCH FPROGRAMA FOR FIF FFUNCTION FFOR ENTRADA ELSE CASE_DEFAULT CASE ]
-- On FFOR shift to state 100

State 100:
comando_for -> FOR variavel BEGIN expressao END expressao DO nonempty_list(comando) FFOR . [ WHILE SWITCH SAIDA_LINHA SAIDA RETURN IF ID FWHILE FSWITCH FPROGRAMA FOR FIF FFUNCTION FFOR ENTRADA ELSE CASE_DEFAULT CASE ]
-- On WHILE reduce production comando_for -> FOR variavel BEGIN expressao END expressao DO nonempty_list(comando) FFOR 
-- On SWITCH reduce production comando_for -> FOR variavel BEGIN expressao END expressao DO nonempty_list(comando) FFOR 
-- On SAIDA_LINHA reduce production comando_for -> FOR variavel BEGIN expressao END expressao DO nonempty_list(comando) FFOR 
-- On SAIDA reduce production comando_for -> FOR variavel BEGIN expressao END expressao DO nonempty_list(comando) FFOR 
-- On RETURN reduce production comando_for -> FOR variavel BEGIN expressao END expressao DO nonempty_list(comando) FFOR 
-- On IF reduce production comando_for -> FOR variavel BEGIN expressao END expressao DO nonempty_list(comando) FFOR 
-- On ID reduce production comando_for -> FOR variavel BEGIN expressao END expressao DO nonempty_list(comando) FFOR 
-- On FWHILE reduce production comando_for -> FOR variavel BEGIN expressao END expressao DO nonempty_list(comando) FFOR 
-- On FSWITCH reduce production comando_for -> FOR variavel BEGIN expressao END expressao DO nonempty_list(comando) FFOR 
-- On FPROGRAMA reduce production comando_for -> FOR variavel BEGIN expressao END expressao DO nonempty_list(comando) FFOR 
-- On FOR reduce production comando_for -> FOR variavel BEGIN expressao END expressao DO nonempty_list(comando) FFOR 
-- On FIF reduce production comando_for -> FOR variavel BEGIN expressao END expressao DO nonempty_list(comando) FFOR 
-- On FFUNCTION reduce production comando_for -> FOR variavel BEGIN expressao END expressao DO nonempty_list(comando) FFOR 
-- On FFOR reduce production comando_for -> FOR variavel BEGIN expressao END expressao DO nonempty_list(comando) FFOR 
-- On ENTRADA reduce production comando_for -> FOR variavel BEGIN expressao END expressao DO nonempty_list(comando) FFOR 
-- On ELSE reduce production comando_for -> FOR variavel BEGIN expressao END expressao DO nonempty_list(comando) FFOR 
-- On CASE_DEFAULT reduce production comando_for -> FOR variavel BEGIN expressao END expressao DO nonempty_list(comando) FFOR 
-- On CASE reduce production comando_for -> FOR variavel BEGIN expressao END expressao DO nonempty_list(comando) FFOR 

State 101:
comando -> comando_switch . [ WHILE SWITCH SAIDA_LINHA SAIDA RETURN IF ID FWHILE FSWITCH FPROGRAMA FOR FIF FFUNCTION FFOR ENTRADA ELSE CASE_DEFAULT CASE ]
-- On WHILE reduce production comando -> comando_switch 
-- On SWITCH reduce production comando -> comando_switch 
-- On SAIDA_LINHA reduce production comando -> comando_switch 
-- On SAIDA reduce production comando -> comando_switch 
-- On RETURN reduce production comando -> comando_switch 
-- On IF reduce production comando -> comando_switch 
-- On ID reduce production comando -> comando_switch 
-- On FWHILE reduce production comando -> comando_switch 
-- On FSWITCH reduce production comando -> comando_switch 
-- On FPROGRAMA reduce production comando -> comando_switch 
-- On FOR reduce production comando -> comando_switch 
-- On FIF reduce production comando -> comando_switch 
-- On FFUNCTION reduce production comando -> comando_switch 
-- On FFOR reduce production comando -> comando_switch 
-- On ENTRADA reduce production comando -> comando_switch 
-- On ELSE reduce production comando -> comando_switch 
-- On CASE_DEFAULT reduce production comando -> comando_switch 
-- On CASE reduce production comando -> comando_switch 

State 102:
comando -> comando_se . [ WHILE SWITCH SAIDA_LINHA SAIDA RETURN IF ID FWHILE FSWITCH FPROGRAMA FOR FIF FFUNCTION FFOR ENTRADA ELSE CASE_DEFAULT CASE ]
-- On WHILE reduce production comando -> comando_se 
-- On SWITCH reduce production comando -> comando_se 
-- On SAIDA_LINHA reduce production comando -> comando_se 
-- On SAIDA reduce production comando -> comando_se 
-- On RETURN reduce production comando -> comando_se 
-- On IF reduce production comando -> comando_se 
-- On ID reduce production comando -> comando_se 
-- On FWHILE reduce production comando -> comando_se 
-- On FSWITCH reduce production comando -> comando_se 
-- On FPROGRAMA reduce production comando -> comando_se 
-- On FOR reduce production comando -> comando_se 
-- On FIF reduce production comando -> comando_se 
-- On FFUNCTION reduce production comando -> comando_se 
-- On FFOR reduce production comando -> comando_se 
-- On ENTRADA reduce production comando -> comando_se 
-- On ELSE reduce production comando -> comando_se 
-- On CASE_DEFAULT reduce production comando -> comando_se 
-- On CASE reduce production comando -> comando_se 

State 103:
comando -> comando_saida_l . [ WHILE SWITCH SAIDA_LINHA SAIDA RETURN IF ID FWHILE FSWITCH FPROGRAMA FOR FIF FFUNCTION FFOR ENTRADA ELSE CASE_DEFAULT CASE ]
-- On WHILE reduce production comando -> comando_saida_l 
-- On SWITCH reduce production comando -> comando_saida_l 
-- On SAIDA_LINHA reduce production comando -> comando_saida_l 
-- On SAIDA reduce production comando -> comando_saida_l 
-- On RETURN reduce production comando -> comando_saida_l 
-- On IF reduce production comando -> comando_saida_l 
-- On ID reduce production comando -> comando_saida_l 
-- On FWHILE reduce production comando -> comando_saida_l 
-- On FSWITCH reduce production comando -> comando_saida_l 
-- On FPROGRAMA reduce production comando -> comando_saida_l 
-- On FOR reduce production comando -> comando_saida_l 
-- On FIF reduce production comando -> comando_saida_l 
-- On FFUNCTION reduce production comando -> comando_saida_l 
-- On FFOR reduce production comando -> comando_saida_l 
-- On ENTRADA reduce production comando -> comando_saida_l 
-- On ELSE reduce production comando -> comando_saida_l 
-- On CASE_DEFAULT reduce production comando -> comando_saida_l 
-- On CASE reduce production comando -> comando_saida_l 

State 104:
comando -> comando_saida . [ WHILE SWITCH SAIDA_LINHA SAIDA RETURN IF ID FWHILE FSWITCH FPROGRAMA FOR FIF FFUNCTION FFOR ENTRADA ELSE CASE_DEFAULT CASE ]
-- On WHILE reduce production comando -> comando_saida 
-- On SWITCH reduce production comando -> comando_saida 
-- On SAIDA_LINHA reduce production comando -> comando_saida 
-- On SAIDA reduce production comando -> comando_saida 
-- On RETURN reduce production comando -> comando_saida 
-- On IF reduce production comando -> comando_saida 
-- On ID reduce production comando -> comando_saida 
-- On FWHILE reduce production comando -> comando_saida 
-- On FSWITCH reduce production comando -> comando_saida 
-- On FPROGRAMA reduce production comando -> comando_saida 
-- On FOR reduce production comando -> comando_saida 
-- On FIF reduce production comando -> comando_saida 
-- On FFUNCTION reduce production comando -> comando_saida 
-- On FFOR reduce production comando -> comando_saida 
-- On ENTRADA reduce production comando -> comando_saida 
-- On ELSE reduce production comando -> comando_saida 
-- On CASE_DEFAULT reduce production comando -> comando_saida 
-- On CASE reduce production comando -> comando_saida 

State 105:
comando -> comando_return . [ WHILE SWITCH SAIDA_LINHA SAIDA RETURN IF ID FWHILE FSWITCH FPROGRAMA FOR FIF FFUNCTION FFOR ENTRADA ELSE CASE_DEFAULT CASE ]
-- On WHILE reduce production comando -> comando_return 
-- On SWITCH reduce production comando -> comando_return 
-- On SAIDA_LINHA reduce production comando -> comando_return 
-- On SAIDA reduce production comando -> comando_return 
-- On RETURN reduce production comando -> comando_return 
-- On IF reduce production comando -> comando_return 
-- On ID reduce production comando -> comando_return 
-- On FWHILE reduce production comando -> comando_return 
-- On FSWITCH reduce production comando -> comando_return 
-- On FPROGRAMA reduce production comando -> comando_return 
-- On FOR reduce production comando -> comando_return 
-- On FIF reduce production comando -> comando_return 
-- On FFUNCTION reduce production comando -> comando_return 
-- On FFOR reduce production comando -> comando_return 
-- On ENTRADA reduce production comando -> comando_return 
-- On ELSE reduce production comando -> comando_return 
-- On CASE_DEFAULT reduce production comando -> comando_return 
-- On CASE reduce production comando -> comando_return 

State 106:
comando -> comando_for . [ WHILE SWITCH SAIDA_LINHA SAIDA RETURN IF ID FWHILE FSWITCH FPROGRAMA FOR FIF FFUNCTION FFOR ENTRADA ELSE CASE_DEFAULT CASE ]
-- On WHILE reduce production comando -> comando_for 
-- On SWITCH reduce production comando -> comando_for 
-- On SAIDA_LINHA reduce production comando -> comando_for 
-- On SAIDA reduce production comando -> comando_for 
-- On RETURN reduce production comando -> comando_for 
-- On IF reduce production comando -> comando_for 
-- On ID reduce production comando -> comando_for 
-- On FWHILE reduce production comando -> comando_for 
-- On FSWITCH reduce production comando -> comando_for 
-- On FPROGRAMA reduce production comando -> comando_for 
-- On FOR reduce production comando -> comando_for 
-- On FIF reduce production comando -> comando_for 
-- On FFUNCTION reduce production comando -> comando_for 
-- On FFOR reduce production comando -> comando_for 
-- On ENTRADA reduce production comando -> comando_for 
-- On ELSE reduce production comando -> comando_for 
-- On CASE_DEFAULT reduce production comando -> comando_for 
-- On CASE reduce production comando -> comando_for 

State 107:
comando -> comando_entrada . [ WHILE SWITCH SAIDA_LINHA SAIDA RETURN IF ID FWHILE FSWITCH FPROGRAMA FOR FIF FFUNCTION FFOR ENTRADA ELSE CASE_DEFAULT CASE ]
-- On WHILE reduce production comando -> comando_entrada 
-- On SWITCH reduce production comando -> comando_entrada 
-- On SAIDA_LINHA reduce production comando -> comando_entrada 
-- On SAIDA reduce production comando -> comando_entrada 
-- On RETURN reduce production comando -> comando_entrada 
-- On IF reduce production comando -> comando_entrada 
-- On ID reduce production comando -> comando_entrada 
-- On FWHILE reduce production comando -> comando_entrada 
-- On FSWITCH reduce production comando -> comando_entrada 
-- On FPROGRAMA reduce production comando -> comando_entrada 
-- On FOR reduce production comando -> comando_entrada 
-- On FIF reduce production comando -> comando_entrada 
-- On FFUNCTION reduce production comando -> comando_entrada 
-- On FFOR reduce production comando -> comando_entrada 
-- On ENTRADA reduce production comando -> comando_entrada 
-- On ELSE reduce production comando -> comando_entrada 
-- On CASE_DEFAULT reduce production comando -> comando_entrada 
-- On CASE reduce production comando -> comando_entrada 

State 108:
comando -> comando_enquanto . [ WHILE SWITCH SAIDA_LINHA SAIDA RETURN IF ID FWHILE FSWITCH FPROGRAMA FOR FIF FFUNCTION FFOR ENTRADA ELSE CASE_DEFAULT CASE ]
-- On WHILE reduce production comando -> comando_enquanto 
-- On SWITCH reduce production comando -> comando_enquanto 
-- On SAIDA_LINHA reduce production comando -> comando_enquanto 
-- On SAIDA reduce production comando -> comando_enquanto 
-- On RETURN reduce production comando -> comando_enquanto 
-- On IF reduce production comando -> comando_enquanto 
-- On ID reduce production comando -> comando_enquanto 
-- On FWHILE reduce production comando -> comando_enquanto 
-- On FSWITCH reduce production comando -> comando_enquanto 
-- On FPROGRAMA reduce production comando -> comando_enquanto 
-- On FOR reduce production comando -> comando_enquanto 
-- On FIF reduce production comando -> comando_enquanto 
-- On FFUNCTION reduce production comando -> comando_enquanto 
-- On FFOR reduce production comando -> comando_enquanto 
-- On ENTRADA reduce production comando -> comando_enquanto 
-- On ELSE reduce production comando -> comando_enquanto 
-- On CASE_DEFAULT reduce production comando -> comando_enquanto 
-- On CASE reduce production comando -> comando_enquanto 

State 109:
comando -> comando_chamada . [ WHILE SWITCH SAIDA_LINHA SAIDA RETURN IF ID FWHILE FSWITCH FPROGRAMA FOR FIF FFUNCTION FFOR ENTRADA ELSE CASE_DEFAULT CASE ]
-- On WHILE reduce production comando -> comando_chamada 
-- On SWITCH reduce production comando -> comando_chamada 
-- On SAIDA_LINHA reduce production comando -> comando_chamada 
-- On SAIDA reduce production comando -> comando_chamada 
-- On RETURN reduce production comando -> comando_chamada 
-- On IF reduce production comando -> comando_chamada 
-- On ID reduce production comando -> comando_chamada 
-- On FWHILE reduce production comando -> comando_chamada 
-- On FSWITCH reduce production comando -> comando_chamada 
-- On FPROGRAMA reduce production comando -> comando_chamada 
-- On FOR reduce production comando -> comando_chamada 
-- On FIF reduce production comando -> comando_chamada 
-- On FFUNCTION reduce production comando -> comando_chamada 
-- On FFOR reduce production comando -> comando_chamada 
-- On ENTRADA reduce production comando -> comando_chamada 
-- On ELSE reduce production comando -> comando_chamada 
-- On CASE_DEFAULT reduce production comando -> comando_chamada 
-- On CASE reduce production comando -> comando_chamada 

State 110:
comando -> comando_atribuicao . [ WHILE SWITCH SAIDA_LINHA SAIDA RETURN IF ID FWHILE FSWITCH FPROGRAMA FOR FIF FFUNCTION FFOR ENTRADA ELSE CASE_DEFAULT CASE ]
-- On WHILE reduce production comando -> comando_atribuicao 
-- On SWITCH reduce production comando -> comando_atribuicao 
-- On SAIDA_LINHA reduce production comando -> comando_atribuicao 
-- On SAIDA reduce production comando -> comando_atribuicao 
-- On RETURN reduce production comando -> comando_atribuicao 
-- On IF reduce production comando -> comando_atribuicao 
-- On ID reduce production comando -> comando_atribuicao 
-- On FWHILE reduce production comando -> comando_atribuicao 
-- On FSWITCH reduce production comando -> comando_atribuicao 
-- On FPROGRAMA reduce production comando -> comando_atribuicao 
-- On FOR reduce production comando -> comando_atribuicao 
-- On FIF reduce production comando -> comando_atribuicao 
-- On FFUNCTION reduce production comando -> comando_atribuicao 
-- On FFOR reduce production comando -> comando_atribuicao 
-- On ENTRADA reduce production comando -> comando_atribuicao 
-- On ELSE reduce production comando -> comando_atribuicao 
-- On CASE_DEFAULT reduce production comando -> comando_atribuicao 
-- On CASE reduce production comando -> comando_atribuicao 

State 111:
nonempty_list(comando) -> comando . [ FWHILE FSWITCH FIF FFOR ELSE CASE_DEFAULT CASE ]
nonempty_list(comando) -> comando . nonempty_list(comando) [ FWHILE FSWITCH FIF FFOR ELSE CASE_DEFAULT CASE ]
-- On WHILE shift to state 19
-- On SWITCH shift to state 67
-- On SAIDA_LINHA shift to state 72
-- On SAIDA shift to state 76
-- On RETURN shift to state 80
-- On IF shift to state 82
-- On ID shift to state 24
-- On FOR shift to state 85
-- On ENTRADA shift to state 92
-- On variavel shift to state 96
-- On nonempty_list(comando) shift to state 112
-- On comando_switch shift to state 101
-- On comando_se shift to state 102
-- On comando_saida_l shift to state 103
-- On comando_saida shift to state 104
-- On comando_return shift to state 105
-- On comando_for shift to state 106
-- On comando_entrada shift to state 107
-- On comando_enquanto shift to state 108
-- On comando_chamada shift to state 109
-- On comando_atribuicao shift to state 110
-- On comando shift to state 111
-- On chamada shift to state 113
-- On FWHILE reduce production nonempty_list(comando) -> comando 
-- On FSWITCH reduce production nonempty_list(comando) -> comando 
-- On FIF reduce production nonempty_list(comando) -> comando 
-- On FFOR reduce production nonempty_list(comando) -> comando 
-- On ELSE reduce production nonempty_list(comando) -> comando 
-- On CASE_DEFAULT reduce production nonempty_list(comando) -> comando 
-- On CASE reduce production nonempty_list(comando) -> comando 

State 112:
nonempty_list(comando) -> comando nonempty_list(comando) . [ FWHILE FSWITCH FIF FFOR ELSE CASE_DEFAULT CASE ]
-- On FWHILE reduce production nonempty_list(comando) -> comando nonempty_list(comando) 
-- On FSWITCH reduce production nonempty_list(comando) -> comando nonempty_list(comando) 
-- On FIF reduce production nonempty_list(comando) -> comando nonempty_list(comando) 
-- On FFOR reduce production nonempty_list(comando) -> comando nonempty_list(comando) 
-- On ELSE reduce production nonempty_list(comando) -> comando nonempty_list(comando) 
-- On CASE_DEFAULT reduce production nonempty_list(comando) -> comando nonempty_list(comando) 
-- On CASE reduce production nonempty_list(comando) -> comando nonempty_list(comando) 

State 113:
comando_chamada -> chamada . [ WHILE SWITCH SAIDA_LINHA SAIDA RETURN IF ID FWHILE FSWITCH FPROGRAMA FOR FIF FFUNCTION FFOR ENTRADA ELSE CASE_DEFAULT CASE ]
-- On WHILE reduce production comando_chamada -> chamada 
-- On SWITCH reduce production comando_chamada -> chamada 
-- On SAIDA_LINHA reduce production comando_chamada -> chamada 
-- On SAIDA reduce production comando_chamada -> chamada 
-- On RETURN reduce production comando_chamada -> chamada 
-- On IF reduce production comando_chamada -> chamada 
-- On ID reduce production comando_chamada -> chamada 
-- On FWHILE reduce production comando_chamada -> chamada 
-- On FSWITCH reduce production comando_chamada -> chamada 
-- On FPROGRAMA reduce production comando_chamada -> chamada 
-- On FOR reduce production comando_chamada -> chamada 
-- On FIF reduce production comando_chamada -> chamada 
-- On FFUNCTION reduce production comando_chamada -> chamada 
-- On FFOR reduce production comando_chamada -> chamada 
-- On ENTRADA reduce production comando_chamada -> chamada 
-- On ELSE reduce production comando_chamada -> chamada 
-- On CASE_DEFAULT reduce production comando_chamada -> chamada 
-- On CASE reduce production comando_chamada -> chamada 

State 114:
comando_se -> IF expressao ENTAO nonempty_list(comando) . option(__anonymous_0) FIF [ WHILE SWITCH SAIDA_LINHA SAIDA RETURN IF ID FWHILE FSWITCH FPROGRAMA FOR FIF FFUNCTION FFOR ENTRADA ELSE CASE_DEFAULT CASE ]
-- On ELSE shift to state 115
-- On option(__anonymous_0) shift to state 117
-- On FIF reduce production option(__anonymous_0) -> 

State 115:
option(__anonymous_0) -> ELSE . nonempty_list(comando) [ FIF ]
-- On WHILE shift to state 19
-- On SWITCH shift to state 67
-- On SAIDA_LINHA shift to state 72
-- On SAIDA shift to state 76
-- On RETURN shift to state 80
-- On IF shift to state 82
-- On ID shift to state 24
-- On FOR shift to state 85
-- On ENTRADA shift to state 92
-- On variavel shift to state 96
-- On nonempty_list(comando) shift to state 116
-- On comando_switch shift to state 101
-- On comando_se shift to state 102
-- On comando_saida_l shift to state 103
-- On comando_saida shift to state 104
-- On comando_return shift to state 105
-- On comando_for shift to state 106
-- On comando_entrada shift to state 107
-- On comando_enquanto shift to state 108
-- On comando_chamada shift to state 109
-- On comando_atribuicao shift to state 110
-- On comando shift to state 111
-- On chamada shift to state 113

State 116:
option(__anonymous_0) -> ELSE nonempty_list(comando) . [ FIF ]
-- On FIF reduce production option(__anonymous_0) -> ELSE nonempty_list(comando) 

State 117:
comando_se -> IF expressao ENTAO nonempty_list(comando) option(__anonymous_0) . FIF [ WHILE SWITCH SAIDA_LINHA SAIDA RETURN IF ID FWHILE FSWITCH FPROGRAMA FOR FIF FFUNCTION FFOR ENTRADA ELSE CASE_DEFAULT CASE ]
-- On FIF shift to state 118

State 118:
comando_se -> IF expressao ENTAO nonempty_list(comando) option(__anonymous_0) FIF . [ WHILE SWITCH SAIDA_LINHA SAIDA RETURN IF ID FWHILE FSWITCH FPROGRAMA FOR FIF FFUNCTION FFOR ENTRADA ELSE CASE_DEFAULT CASE ]
-- On WHILE reduce production comando_se -> IF expressao ENTAO nonempty_list(comando) option(__anonymous_0) FIF 
-- On SWITCH reduce production comando_se -> IF expressao ENTAO nonempty_list(comando) option(__anonymous_0) FIF 
-- On SAIDA_LINHA reduce production comando_se -> IF expressao ENTAO nonempty_list(comando) option(__anonymous_0) FIF 
-- On SAIDA reduce production comando_se -> IF expressao ENTAO nonempty_list(comando) option(__anonymous_0) FIF 
-- On RETURN reduce production comando_se -> IF expressao ENTAO nonempty_list(comando) option(__anonymous_0) FIF 
-- On IF reduce production comando_se -> IF expressao ENTAO nonempty_list(comando) option(__anonymous_0) FIF 
-- On ID reduce production comando_se -> IF expressao ENTAO nonempty_list(comando) option(__anonymous_0) FIF 
-- On FWHILE reduce production comando_se -> IF expressao ENTAO nonempty_list(comando) option(__anonymous_0) FIF 
-- On FSWITCH reduce production comando_se -> IF expressao ENTAO nonempty_list(comando) option(__anonymous_0) FIF 
-- On FPROGRAMA reduce production comando_se -> IF expressao ENTAO nonempty_list(comando) option(__anonymous_0) FIF 
-- On FOR reduce production comando_se -> IF expressao ENTAO nonempty_list(comando) option(__anonymous_0) FIF 
-- On FIF reduce production comando_se -> IF expressao ENTAO nonempty_list(comando) option(__anonymous_0) FIF 
-- On FFUNCTION reduce production comando_se -> IF expressao ENTAO nonempty_list(comando) option(__anonymous_0) FIF 
-- On FFOR reduce production comando_se -> IF expressao ENTAO nonempty_list(comando) option(__anonymous_0) FIF 
-- On ENTRADA reduce production comando_se -> IF expressao ENTAO nonempty_list(comando) option(__anonymous_0) FIF 
-- On ELSE reduce production comando_se -> IF expressao ENTAO nonempty_list(comando) option(__anonymous_0) FIF 
-- On CASE_DEFAULT reduce production comando_se -> IF expressao ENTAO nonempty_list(comando) option(__anonymous_0) FIF 
-- On CASE reduce production comando_se -> IF expressao ENTAO nonempty_list(comando) option(__anonymous_0) FIF 

State 119:
caso -> CASE expressao nonempty_list(comando) . [ FSWITCH CASE_DEFAULT CASE ]
-- On FSWITCH reduce production caso -> CASE expressao nonempty_list(comando) 
-- On CASE_DEFAULT reduce production caso -> CASE expressao nonempty_list(comando) 
-- On CASE reduce production caso -> CASE expressao nonempty_list(comando) 

State 120:
comando_switch -> SWITCH variavel nonempty_list(caso) . option(default) FSWITCH [ WHILE SWITCH SAIDA_LINHA SAIDA RETURN IF ID FWHILE FSWITCH FPROGRAMA FOR FIF FFUNCTION FFOR ENTRADA ELSE CASE_DEFAULT CASE ]
-- On CASE_DEFAULT shift to state 121
-- On option(default) shift to state 123
-- On default shift to state 125
-- On FSWITCH reduce production option(default) -> 

State 121:
default -> CASE_DEFAULT . nonempty_list(comando) [ FSWITCH ]
-- On WHILE shift to state 19
-- On SWITCH shift to state 67
-- On SAIDA_LINHA shift to state 72
-- On SAIDA shift to state 76
-- On RETURN shift to state 80
-- On IF shift to state 82
-- On ID shift to state 24
-- On FOR shift to state 85
-- On ENTRADA shift to state 92
-- On variavel shift to state 96
-- On nonempty_list(comando) shift to state 122
-- On comando_switch shift to state 101
-- On comando_se shift to state 102
-- On comando_saida_l shift to state 103
-- On comando_saida shift to state 104
-- On comando_return shift to state 105
-- On comando_for shift to state 106
-- On comando_entrada shift to state 107
-- On comando_enquanto shift to state 108
-- On comando_chamada shift to state 109
-- On comando_atribuicao shift to state 110
-- On comando shift to state 111
-- On chamada shift to state 113

State 122:
default -> CASE_DEFAULT nonempty_list(comando) . [ FSWITCH ]
-- On FSWITCH reduce production default -> CASE_DEFAULT nonempty_list(comando) 

State 123:
comando_switch -> SWITCH variavel nonempty_list(caso) option(default) . FSWITCH [ WHILE SWITCH SAIDA_LINHA SAIDA RETURN IF ID FWHILE FSWITCH FPROGRAMA FOR FIF FFUNCTION FFOR ENTRADA ELSE CASE_DEFAULT CASE ]
-- On FSWITCH shift to state 124

State 124:
comando_switch -> SWITCH variavel nonempty_list(caso) option(default) FSWITCH . [ WHILE SWITCH SAIDA_LINHA SAIDA RETURN IF ID FWHILE FSWITCH FPROGRAMA FOR FIF FFUNCTION FFOR ENTRADA ELSE CASE_DEFAULT CASE ]
-- On WHILE reduce production comando_switch -> SWITCH variavel nonempty_list(caso) option(default) FSWITCH 
-- On SWITCH reduce production comando_switch -> SWITCH variavel nonempty_list(caso) option(default) FSWITCH 
-- On SAIDA_LINHA reduce production comando_switch -> SWITCH variavel nonempty_list(caso) option(default) FSWITCH 
-- On SAIDA reduce production comando_switch -> SWITCH variavel nonempty_list(caso) option(default) FSWITCH 
-- On RETURN reduce production comando_switch -> SWITCH variavel nonempty_list(caso) option(default) FSWITCH 
-- On IF reduce production comando_switch -> SWITCH variavel nonempty_list(caso) option(default) FSWITCH 
-- On ID reduce production comando_switch -> SWITCH variavel nonempty_list(caso) option(default) FSWITCH 
-- On FWHILE reduce production comando_switch -> SWITCH variavel nonempty_list(caso) option(default) FSWITCH 
-- On FSWITCH reduce production comando_switch -> SWITCH variavel nonempty_list(caso) option(default) FSWITCH 
-- On FPROGRAMA reduce production comando_switch -> SWITCH variavel nonempty_list(caso) option(default) FSWITCH 
-- On FOR reduce production comando_switch -> SWITCH variavel nonempty_list(caso) option(default) FSWITCH 
-- On FIF reduce production comando_switch -> SWITCH variavel nonempty_list(caso) option(default) FSWITCH 
-- On FFUNCTION reduce production comando_switch -> SWITCH variavel nonempty_list(caso) option(default) FSWITCH 
-- On FFOR reduce production comando_switch -> SWITCH variavel nonempty_list(caso) option(default) FSWITCH 
-- On ENTRADA reduce production comando_switch -> SWITCH variavel nonempty_list(caso) option(default) FSWITCH 
-- On ELSE reduce production comando_switch -> SWITCH variavel nonempty_list(caso) option(default) FSWITCH 
-- On CASE_DEFAULT reduce production comando_switch -> SWITCH variavel nonempty_list(caso) option(default) FSWITCH 
-- On CASE reduce production comando_switch -> SWITCH variavel nonempty_list(caso) option(default) FSWITCH 

State 125:
option(default) -> default . [ FSWITCH ]
-- On FSWITCH reduce production option(default) -> default 

State 126:
nonempty_list(caso) -> caso . [ FSWITCH CASE_DEFAULT ]
nonempty_list(caso) -> caso . nonempty_list(caso) [ FSWITCH CASE_DEFAULT ]
-- On CASE shift to state 70
-- On nonempty_list(caso) shift to state 127
-- On caso shift to state 126
-- On FSWITCH reduce production nonempty_list(caso) -> caso 
-- On CASE_DEFAULT reduce production nonempty_list(caso) -> caso 

State 127:
nonempty_list(caso) -> caso nonempty_list(caso) . [ FSWITCH CASE_DEFAULT ]
-- On FSWITCH reduce production nonempty_list(caso) -> caso nonempty_list(caso) 
-- On CASE_DEFAULT reduce production nonempty_list(caso) -> caso nonempty_list(caso) 

State 128:
comando_enquanto -> WHILE expressao DO nonempty_list(comando) . FWHILE [ WHILE SWITCH SAIDA_LINHA SAIDA RETURN IF ID FWHILE FSWITCH FPROGRAMA FOR FIF FFUNCTION FFOR ENTRADA ELSE CASE_DEFAULT CASE ]
-- On FWHILE shift to state 129

State 129:
comando_enquanto -> WHILE expressao DO nonempty_list(comando) FWHILE . [ WHILE SWITCH SAIDA_LINHA SAIDA RETURN IF ID FWHILE FSWITCH FPROGRAMA FOR FIF FFUNCTION FFOR ENTRADA ELSE CASE_DEFAULT CASE ]
-- On WHILE reduce production comando_enquanto -> WHILE expressao DO nonempty_list(comando) FWHILE 
-- On SWITCH reduce production comando_enquanto -> WHILE expressao DO nonempty_list(comando) FWHILE 
-- On SAIDA_LINHA reduce production comando_enquanto -> WHILE expressao DO nonempty_list(comando) FWHILE 
-- On SAIDA reduce production comando_enquanto -> WHILE expressao DO nonempty_list(comando) FWHILE 
-- On RETURN reduce production comando_enquanto -> WHILE expressao DO nonempty_list(comando) FWHILE 
-- On IF reduce production comando_enquanto -> WHILE expressao DO nonempty_list(comando) FWHILE 
-- On ID reduce production comando_enquanto -> WHILE expressao DO nonempty_list(comando) FWHILE 
-- On FWHILE reduce production comando_enquanto -> WHILE expressao DO nonempty_list(comando) FWHILE 
-- On FSWITCH reduce production comando_enquanto -> WHILE expressao DO nonempty_list(comando) FWHILE 
-- On FPROGRAMA reduce production comando_enquanto -> WHILE expressao DO nonempty_list(comando) FWHILE 
-- On FOR reduce production comando_enquanto -> WHILE expressao DO nonempty_list(comando) FWHILE 
-- On FIF reduce production comando_enquanto -> WHILE expressao DO nonempty_list(comando) FWHILE 
-- On FFUNCTION reduce production comando_enquanto -> WHILE expressao DO nonempty_list(comando) FWHILE 
-- On FFOR reduce production comando_enquanto -> WHILE expressao DO nonempty_list(comando) FWHILE 
-- On ENTRADA reduce production comando_enquanto -> WHILE expressao DO nonempty_list(comando) FWHILE 
-- On ELSE reduce production comando_enquanto -> WHILE expressao DO nonempty_list(comando) FWHILE 
-- On CASE_DEFAULT reduce production comando_enquanto -> WHILE expressao DO nonempty_list(comando) FWHILE 
-- On CASE reduce production comando_enquanto -> WHILE expressao DO nonempty_list(comando) FWHILE 

State 130:
prog -> PROGRAMA LITSTRING declaracao INI list(comando) . FPROGRAMA list(decFunctions) EOF [ # ]
-- On FPROGRAMA shift to state 131

State 131:
prog -> PROGRAMA LITSTRING declaracao INI list(comando) FPROGRAMA . list(decFunctions) EOF [ # ]
-- On FUNCTION shift to state 132
-- On list(decFunctions) shift to state 146
-- On decFunctions shift to state 148
-- On EOF reduce production list(decFunctions) -> 

State 132:
decFunctions -> FUNCTION . ID APAR list(variaveis) FPAR DEF tipo declaracao INI list(comando) FFUNCTION ID [ FUNCTION EOF ]
-- On ID shift to state 133

State 133:
decFunctions -> FUNCTION ID . APAR list(variaveis) FPAR DEF tipo declaracao INI list(comando) FFUNCTION ID [ FUNCTION EOF ]
-- On APAR shift to state 134

State 134:
decFunctions -> FUNCTION ID APAR . list(variaveis) FPAR DEF tipo declaracao INI list(comando) FFUNCTION ID [ FUNCTION EOF ]
-- On ID shift to state 4
-- On variaveis shift to state 7
-- On separated_nonempty_list(VIRG,ID) shift to state 8
-- On list(variaveis) shift to state 135
-- On FPAR reduce production list(variaveis) -> 

State 135:
decFunctions -> FUNCTION ID APAR list(variaveis) . FPAR DEF tipo declaracao INI list(comando) FFUNCTION ID [ FUNCTION EOF ]
-- On FPAR shift to state 136

State 136:
decFunctions -> FUNCTION ID APAR list(variaveis) FPAR . DEF tipo declaracao INI list(comando) FFUNCTION ID [ FUNCTION EOF ]
-- On DEF shift to state 137

State 137:
decFunctions -> FUNCTION ID APAR list(variaveis) FPAR DEF . tipo declaracao INI list(comando) FFUNCTION ID [ FUNCTION EOF ]
-- On REAL shift to state 10
-- On INTEGER shift to state 11
-- On CARACTER shift to state 12
-- On BOOL shift to state 13
-- On tipo shift to state 138

State 138:
decFunctions -> FUNCTION ID APAR list(variaveis) FPAR DEF tipo . declaracao INI list(comando) FFUNCTION ID [ FUNCTION EOF ]
-- On VAR shift to state 3
-- On declaracao shift to state 139
-- On INI reduce production declaracao -> 

State 139:
decFunctions -> FUNCTION ID APAR list(variaveis) FPAR DEF tipo declaracao . INI list(comando) FFUNCTION ID [ FUNCTION EOF ]
-- On INI shift to state 140

State 140:
decFunctions -> FUNCTION ID APAR list(variaveis) FPAR DEF tipo declaracao INI . list(comando) FFUNCTION ID [ FUNCTION EOF ]
-- On WHILE shift to state 19
-- On SWITCH shift to state 67
-- On SAIDA_LINHA shift to state 72
-- On SAIDA shift to state 76
-- On RETURN shift to state 80
-- On IF shift to state 82
-- On ID shift to state 24
-- On FOR shift to state 85
-- On ENTRADA shift to state 92
-- On variavel shift to state 96
-- On list(comando) shift to state 141
-- On comando_switch shift to state 101
-- On comando_se shift to state 102
-- On comando_saida_l shift to state 103
-- On comando_saida shift to state 104
-- On comando_return shift to state 105
-- On comando_for shift to state 106
-- On comando_entrada shift to state 107
-- On comando_enquanto shift to state 108
-- On comando_chamada shift to state 109
-- On comando_atribuicao shift to state 110
-- On comando shift to state 144
-- On chamada shift to state 113
-- On FFUNCTION reduce production list(comando) -> 

State 141:
decFunctions -> FUNCTION ID APAR list(variaveis) FPAR DEF tipo declaracao INI list(comando) . FFUNCTION ID [ FUNCTION EOF ]
-- On FFUNCTION shift to state 142

State 142:
decFunctions -> FUNCTION ID APAR list(variaveis) FPAR DEF tipo declaracao INI list(comando) FFUNCTION . ID [ FUNCTION EOF ]
-- On ID shift to state 143

State 143:
decFunctions -> FUNCTION ID APAR list(variaveis) FPAR DEF tipo declaracao INI list(comando) FFUNCTION ID . [ FUNCTION EOF ]
-- On FUNCTION reduce production decFunctions -> FUNCTION ID APAR list(variaveis) FPAR DEF tipo declaracao INI list(comando) FFUNCTION ID 
-- On EOF reduce production decFunctions -> FUNCTION ID APAR list(variaveis) FPAR DEF tipo declaracao INI list(comando) FFUNCTION ID 

State 144:
list(comando) -> comando . list(comando) [ FPROGRAMA FFUNCTION ]
-- On WHILE shift to state 19
-- On SWITCH shift to state 67
-- On SAIDA_LINHA shift to state 72
-- On SAIDA shift to state 76
-- On RETURN shift to state 80
-- On IF shift to state 82
-- On ID shift to state 24
-- On FOR shift to state 85
-- On ENTRADA shift to state 92
-- On variavel shift to state 96
-- On list(comando) shift to state 145
-- On comando_switch shift to state 101
-- On comando_se shift to state 102
-- On comando_saida_l shift to state 103
-- On comando_saida shift to state 104
-- On comando_return shift to state 105
-- On comando_for shift to state 106
-- On comando_entrada shift to state 107
-- On comando_enquanto shift to state 108
-- On comando_chamada shift to state 109
-- On comando_atribuicao shift to state 110
-- On comando shift to state 144
-- On chamada shift to state 113
-- On FPROGRAMA reduce production list(comando) -> 
-- On FFUNCTION reduce production list(comando) -> 

State 145:
list(comando) -> comando list(comando) . [ FPROGRAMA FFUNCTION ]
-- On FPROGRAMA reduce production list(comando) -> comando list(comando) 
-- On FFUNCTION reduce production list(comando) -> comando list(comando) 

State 146:
prog -> PROGRAMA LITSTRING declaracao INI list(comando) FPROGRAMA list(decFunctions) . EOF [ # ]
-- On EOF shift to state 147

State 147:
prog -> PROGRAMA LITSTRING declaracao INI list(comando) FPROGRAMA list(decFunctions) EOF . [ # ]
-- On # reduce production prog -> PROGRAMA LITSTRING declaracao INI list(comando) FPROGRAMA list(decFunctions) EOF 

State 148:
list(decFunctions) -> decFunctions . list(decFunctions) [ EOF ]
-- On FUNCTION shift to state 132
-- On list(decFunctions) shift to state 149
-- On decFunctions shift to state 148
-- On EOF reduce production list(decFunctions) -> 

State 149:
list(decFunctions) -> decFunctions list(decFunctions) . [ EOF ]
-- On EOF reduce production list(decFunctions) -> decFunctions list(decFunctions) 

State 150:
prog' -> prog . [ # ]
-- On # accept prog

